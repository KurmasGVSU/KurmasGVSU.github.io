version=pmwiki-2.1.27 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.4; en-US; rv:1.9.1.7) Gecko/20091221 Firefox/3.5.7
author=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
csum=
ctime=1264425690
host=68.188.218.51
name=WorkPrivate.QuantumComputingFTLCGrant
rev=44
targets=
text=[++ Brief Summary ++] %0a%0aIn lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on quantum computing.  A quantum computer is a "device for computation that makes direct use of quantum mechanical phenomena, such as superposition and entanglement" to process data.  This use of quantum phenomena allows a quantum computer to process data much more rapidly than a "classical" computer. Quantum computers use a model of computation that is very different from the "classical" model on which all current algorithm development is based.  This quantum model is very similar to the model utilized by other emerging computing technologies, such as DNA computing.  Thus, students who take this course will develop a broader perspective of computing that I believe will better position them to develop and utilize newly emerging computing technologies.%0a%0aThis will be a truly interdisciplinary course.   Quantum computing very tightly integrates quantum physics, linear algebra, and algorithm analysis.  Aspects of each discipline are fundamental and critical to the understanding of quantum computing.  It is difficult, if not impossible to separate the subject into separate physics, math, and computer science components.  In contrast, most of the interdisciplinary projects I have heard about had a fairly clear separation between components and each discipline simply "served" the other (e.g., the computer scientist "served" the physicist by writing a computer program, or the physicist "served" the computer scientist by developing new and faster hardware.)  It is my expectation that this tighter coupling will encourage the students to work more closely with each other when studying and give students a deeper appreciation for dependencies between the sciences.%0a%0a(For this grant, I am proposing a course that focuses on quantum computing and brings together math computer science and physics students.  In the long term, I would like to expand the course to cover other non-traditional computing paradigms such as DNA computing and nano-technology which would then include chemistry, biology, and other science students.)  %0a%0aIn addition to the intangible benefits listed above my main tangible goals for this course are to (1) get more computer science students to voluntarily take other math and science courses, and (2) get more math and science majors to take more computing courses.  I explain these goals in Section 2.%0a%0aI am seeking FTLC support because preparing this course will take significantly more time and effort that preparing a new "traditional" Computer Science course:%0aFirst, quantum computing is different enough from traditional Computer Science that I won't be able to learn it quickly. (I certainly won't be able to prepare a course of acceptable quality by simply reading a chapter or two ahead of the students in the textbook!)  .  In addition, I suspect very few GVSU students currently take all the obvious pre-requsites for a quantum computing course (computer programming, linear algebra, and quantum mechanics).  Thus, as I prepare the course, I will also have to identify the set of topics in  linear algebra, computer programming, and quantum mechanics topics that are essential to the understand of quantum computing, then develop lectures that are accessible to a typical GVSU student.  (This may sound impossible; but, this approach has been used successfully at several "research" universities. I am confident I can modify their approach to make a quantum computing course interesting an accessible to a "critical mass" of Grand Valley students.)   Given the amount of time necessary to prepare this course, I am seeking a Pew FTLC grant in lieu of teaching this summer.%0a%0a[++ Problem Statement ++]%0a%0aI do not believe we are preparing our students as well as we could to design and program the next generation of computing technology.  In particular, (1) our entire computing curriculum is based on the same model of computation we have used for 70 years.  We need to get our students thinking about computation at a higher level.  (2) Our students see the work of computer scientists and physicists as very separate and service oriented:  Physicists "serve" computer scientists by developing new technology on which we build faster computers while computer scientists serve physicists and other scientists by providing computers and computer software that helps them with their research.  Developing the next generation of of computing technology will require scientists of all disciplines to work more closely together.%0a%0aUntil about 2000, we improved the computational power of the CPU primarily by either (1) making the individual components smaller and faster, or (2) adding instruction level parallelism (automatically identifying two or more individual computational steps that could be done at the same time).  Beginning about 10 years ago, heat dissipation and other fundamental physical issues began to limit the amount of improvement that we could obtain by simply making the chip smaller and faster.  At the same time, we also began to reach the limit of the performance improvement we could get by adding instruction level parallelism (you can do only so many things at one time before dependencies accrue).  In response, multi-core and cell processors have become popular.  These processors don't automatically find work that can be done in parallel:  The programmer must explicitly write the program to utilize all the cores.  %0a%0aIn spite of this paradigm change to increasingly parallel computation, we are still programming using the same "sequential" mental model we have had since the 1940's. We tend to write a computer program as if we were going to run it on a 1960's CPU, then try to "reorganize it" to effectively utilize a multi-core CPU.  In many cases this is a tedious and error-prone process.  In order to most effectively utilize the next generation of computing technology, we need to develop new models of computation: One where parallelism and randomization are primary concerns, not afterthoughts.%0a%0aWe should involve all scientists in this process of developing new computational models because any model of computation is necessarily related to the underlying implementation.  For example, our "traditional"  model of computation follows directly from the initial design of computers in the 1930s and 1940s. Our problem is that we are still using this model even though our implementations are beginning to change.  Because the model and the implementation are related, the design of new computing technologies needs to involve the close cooperation of both computer scientists who specialize in computation and the physicists, chemists, and engineers who research and design the computing device.    To do this computer scientists need to know about natural processes (such as quantum mechanics and chemical reactions) that can perform computations, and physicists and chemists need to understand computation at a higher level that just writing computer programs so that they can recognize when their innovations can potentially be used for computation.%0a%0a[+ Quantum Computing +]%0a%0aQuantum computing is one emerging technology that can address both of these issues:  (1) Quantum computing uses a computation model that is very different from the one our students learn.  This model is similar to the models used by other emerging technologies, such as DNA computing.  Learning quantum computing should help get students out of their classical computing "rut".  (2) Quantum computing tightly integrates computer science, math, and physics.   Students must learn elements of all three to fully understand the topic.  They can't simply stuff the physics and math conveniently into a little black box for others to worry about.  They will see that developing new technology like quantum computing requires knowledge from several different disciplines.%0a%0aIn a classical computer, information is stored in sets of "bits".  A bit is some physical device that can be in one of two states  "0" or "1" (or, if you prefer, "on" and "off", or "true" and "false").  A set n bits together can encode one of 2^n states.  Thus, for example, we can use 32 bits together to store one integer in the range of [0 to 2^32-1].  Classical computers then use logic gates to implement mathematical functions on these bits.  These functions form the basis for computation (addition, subtraction, comparison, etc.).  Classical computers are deterministic and sequential:  Given a given input, a deterministic computation always produces the same output; and, any given logic gate can perform only one computation at a time.%0a%0aIn contrast, quantum computers store information in quantum bits, or qbits.  Properties of quantum mechanics allow a qbit to have a state of 0, 1, or a "superposition" of 0 and 1.  This "superposition" means that the qubit simultaneously maintains a state of both 0 and 1.  This superposition property allows n qbits to maintain up to 2^n different states simultaneously.  Therefore,  we can then perform 2^n operations simultaneously.  %0a%0aQuantum computers are more than just massively parallel classical computers.   First, quantum computers are parallel on an entirely different scale.  The parallelism in a quantum computer grows exponentially with the number of qbits, whereas the parallelism in a classical computer can grow at most linearly in the number of logic gates. A quantum computer with only 100 qbits would, in theory, be more powerful than a classical computer build with every ounce of matter in the universe.  Second, quantum computers are not deterministic, they are probabilistic.  Although n qubits can exist in 2^n states simultaneously, we can only measure one of these states at a time, and the state that is measured is random.  Thus, quantum algorithms must be generated carefully so that repeated measurements will produce the correct answer with high probability.%0a%0aThe idea of existing in many states simultaneously, or a computer that produces random answers may seem absurd at first; however, physicists have repeatedly demonstrated these fantastic phenomena in the lab, and mathematicians have proved that we can effectively utilize probabilistic computation.   We are years away from a generally useful quantum computer; but scientists have built a working 8 qubit quantum computer. The students in this class are unlikely to use what they've learned directly to program a quantum computer.  However, the principles of massive parallelism and randomized computing that underlie quantum computing (massive parallelism and randomization) also apply to other new computing technologies (such as DNA computing).  Instead of directly applicable skills, the students will learn to broaden their view of computing so as to be better prepared for the next generation of computing technology. Quantum computing and other "science fiction" computing technologies are coming, and we should offer our students the opportunity to get ahead of the curve.%0a%0a%0aWe do have classical computing techniques that use both parallelism and randomization; however, the way we apply these techniques to classical computers does not translate directly to a quantum computer.  Today's computers are parallel in many different aspects:  The pipeline instructions (e.g., put them on an assembly line), have duplicate hardware so that they can process two instructions at once, some have multiple CPUs or cores on a single motherboard.  In almost all cases, we utilize this parallelism in the same way:  We take an traditional algorithm and look for steps that aren't dependent on each other, then somehow get those steps to execute in parallel.    The fundamental mindset is very similar to that used to develop a traditional sequential (i.e., "non-parallel") algorithm.  In contrast, a quantum computer is entirely parallel.    Algorithms must be designed with parallelism as a first thought, not an afterthought.    Similarly, we randomize algorithms in one of two ways:  (1) We randomly guess at answers until we get one we can verify is correct, or (2) we perform certain steps in a random order expecting to avoid pathological cases on average.  Again, in both cases we are applying randomization techniques to an inherently deterministic algorithm. %0a%0a[++ Program Objectives ++]%0a%0aI have both tangible and intangible goals for this course.  As discussed above, my intangible goals are to (1) get students out of their classical computing "rut" and (2) develop an appreciation for the benefit of taking a variety of science courses outside their discipline.   My tangible goals are to  (1) get Computer Science students to voluntarily take more math and science courses, and to (2) get more math and science majors to take more computing courses.  My intangible goal is to foster interdisciplinary interest between math, computer science, and physics at a level that will better enable our students to contribute to the development of the next generation of computing technology.%0a%0a''Get more computer Science students to voluntarily take other math and science courses.''  Many Computer Science majors complain about their required calculus and discrete math courses.  Some simply don't like the subject; others don't see the benefit of learning the material (i.e., how they will use the material on the job). Many of the mathematics and physics concepts fundamental to Computer Science get abstracted away as "black boxes".  For example, in our Computer Organization class (CS 251) we present logic gates as a black box that computes a logical AND, OR, or NOT function. These "boxes" are, of course, built from transistors.  Because our students don't need to know how the transistors work or are organized, many don't appreciate the benefit of understanding the physics, chemistry, and engineering behind the gates.  %0a%0aMany of our students see the physics, chemistry, and mathematics underlying computer science as tasks that can be  "outsourced" to the mathematicians, physicists and engineers.  They don't see any direct benefit to learning this underlying material themselves.   One goal of this course is to teach them a developing technology for which the computer scientists *must* understand the underlying math and physics to use effectively.  It is my hope that students who take this course will understand how knowledge of math, physics, and other sciences will be valuable to them as new technologies come to market and be motivated to willingly enroll in more math and science courses.%0a%0a''Get more math and physics majors to enroll in more Computer Science courses:''   Students from many majors take one of our programming courses (CS 160, CS 162, or CS 261).    These students tend to take the course to learn basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  In other words, they see computer scientists as simply a service that provides computer programs to assist them in their work.  By showing these students that computing is much bigger than programming, I hope to pique their interest in computing as a whole. Those scientists who have a higher-level view of computing will be better positioned to develop the next generation of computing technology.  They will get this perspective only by enrolling in Computer Science courses that go beyond programming.   It is my hope that science students who may not enjoy programming will be interested enough in the higher-level ideas to complement their major with more computing courses.%0a%0aMy goal is to have a class of 22:  10 from computer science, 8 from mathematics, and 4 from physics.  I have contacted colleagues in Math and Physics and they believe these are reasonable goals.  Students will be interested in this course for several reasons:%0a# It has a "science fiction" feel to it.%0a# It will demonstrate a practical use for theoretical material that students otherwise don't anticipate using in their careers.%0a%0aThe anticipated population of physics students is smaller than computer science or math because:%0a# There are fewer physics majors%0a# Physics majors have more theoretical interests than computer scientists, and are, therefore, less bothered by the "how am I going to use this" question.%0a# Physics students will have taken computer programming, linear algebra, and quantum physics.  Therefore, I expect some physics students will opt not to take a class that repeats so much of what they already know.%0a%0aI suspect that this course could eventually transform into a Honor's Program Junior seminar or ... category course.  However, those discussions with Dr. Chamberlin will have to wait until the end of this grant when I have a better idea of how accessible this course material is to students outside of the sciences.%0a%0a[++ Plans ++]%0a%0a%0aThus far, I have (1) ordered quantum computing books for the library (including \cite{}), (2) examined the web pages of many courses on quantum computing, and (3) exchanged e-mails from professors at peer universities who have taught quantum computing, and (4) discussed offering a quantum computing class with Paul Leidig (director of the school of computing),  Ed Abufadel (mathematics department chair who also has experience with quantum computing), and .... in physics.   %0a%0a# I first need to read through several textbooks and significantly improve my understanding of quantum computing.  I have the necessary educational background to learn and teach the course; but it will take some time.  (I have taken undergraduate courses in physics, as well as graduate courses in mathematics and computer science theory.)%0a# Second, I must identify those math and quantum physics topics that are key to understanding quantum computing.  Formally requiring linear algebra and quantum mechanics would effectively limit my course to physics majors.  My preliminary work indicates that the amount of linear algebra and quantum mechanics necessary for a useful understanding of quantum computing is small enough to be reasonably taught as part of the course.  It is not sufficent to simply borrow a syllabus from another university because: ....%0a# Third, I must develop plans to teach the prerequisite material identified above.  Optionally, I may invite interested professors from math or physics to give these lectures.  In either case, I do want to be prepared to deliver the material myself.  (For example, in case I'd be asked a question in office hours.)%0a# Once I have covered the prerequisites,  I must identify those quantum computing topics that I will cover in the class.  I will be looking for those topics that are (1) fundamental to quantum computing, (2) accessible to the typical GVSU student, (3) of interest to the GVSU student, (4) will best bring together physics, mathematics, and computer science, (5) are most likely to get students thinking "outside the box". %0a# Develop lesson plans and assignments.%0a%0a The syllabi and lesson plans of courses at other universities is readily available online.  However, these online resources tend to be from large and/or research-oriented universities such as Cal Tech, Berkeley, MIT, and Wisconsin.   Our top students can certainly handle the material from the courses at these other universities; however, GVSU has a smaller population of students who are willing and able to tackle the "Cal Tech"-style quantum computing course.  Thus, to keep the course attractive to enough GVSU students to fill the course will require a slower and gentler approach.   I have thus found three teaching-oriented schools that offer a course in quantum computing.  They all target the course to seniors with prerequiestes in linear algebra.  I want to make this course accessible to a wider audience.%0a%0aMy goal is have a course ready to go by Fall 2010; however, the need for advertising and reality of university scheduling suggests the course will most likely have an initial offering no earlier than Fall 2011.%0a%0a[+ Evaluation +]%0a%0aThe primary assessment of any course is whether the students learned the material.  I will do that through standard means including tests, problem sets, and group presentations.%0a%0aTo assess whether the course meets its goal of encouraging students to voluntarily enroll in science and math courses outside their major, I can (1) hand out a survey during the last week of class to see which courses they are not considering enrolling in (2)  follow up with the students after two years to see which courses they actually enrolled in, or (3) (with their permission) use banner to watch the classes they enroll in.%0a%0aI'm not sure its feasible to test the benefits of exposing students to other models of computation / getting them to think outside the box.  I can use standard classroom examinations to measure whether the understood the new paradigm, but I suspect that only time will tell just how much these students benefit directly from the experience.%0a%0a[+ Dissemination +]%0a%0aI would disseminate my experiences with developing and teaching this course in several ways:%0a# I would put my syllabus, assignments, and lecture notes on a publicly accessible web page for any instructor to use.%0a# I would write a paper describing my experiences developing the course in a teaching-focused environment and submit it to SIGCSE (the premier conference in Computer Science education).  There have not yet been any papers discussing the teaching of quantum computing presented at SIGCSE (or in any other ACM publication); therefore, a well written, well supported paper would have a good chance of being accepted.%0a# If the paper was well received at SIGCSE I would develop a workshop or tutorial on quantum computing to be presented at SIGCSE or at the regional CCSC (Consortium for Computer Science in Colleges) conferences.%0a%0a[++ Facilities ++]%0a%0aI do not need any special equipment or facilities to execute this project.%0a%0a-----%0a%0a%0a%0a''Prepare all students for the future of computing by getting them to think about computing in non-traditional ways:''%0a%0aThe field of Computing has changed dramatically over the past 20 years; but we have not done a good job conveying this to our students and our other scientists who use computing technology.   Many people still incorrectly believe that Computer Science is just writing computer programs.    Students who beieve t%0a%0aThe fundamental principles of CPU design have not changed in 70 years.    Transistors have replaced vacuum tubes and relays; and we are building more and more parallelism (the ability to do multiple things at once) into the CPUs; however, the primary mental model is the same:  A CPU executes a sequence of simple operations (add, subtract, compare, etc.).  Modern CPUs execute small groups of related instructions in parallel and occasionally synchronize their results.  Around 2000 we began to really feel the limitations of this model:   Heat dissipation and other fundamental physical issues began to limit the amount of improvement that we could obtain by simply making the chip smaller and faster.  At the same time, we had made the chips as *implicitly* parallel as practical.%0a%0a%0a techniques that may replace our current "classical" model of computation built upon transistors and logic gates.  Two example technologies are quantum computing and DNA computing.%0a%0a%0a%0aExisting quantum computing courses tend to fall into one of two categories:%0a# A 200 level course with no formal pre-requsites, but a expectation that the student have "strong mathematical skills" or "familiarity" with math concepts such as linear algebra and complex numbers.%0a# A 300 or 400-level course with strong mathematics,  physics and/or computing pre-requsites, or%0a%0aOption #1 is popular at  "R1" universities like Cal Tech, Berkeley, MIT, and Wisconsin.  Thus far, I have found only three "teaching-focused" universities that offer a course in quantum computing.  Both had specific prerequsites that would allow too few students into a similar course at GVSU.%0a%0a%0a[+ Outline +]%0a
time=1264693408
author:1264693408=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264693408:1264692170:=
host:1264693408=68.188.218.51
author:1264692170=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264692170:1264692123:=63,65c63,65%0a%3c Thus far, I have (1) ordered quantum computing books for the library (including \cite{}), (2) examined the web pages of many courses on quantum computing, and (3) exchanged e-mails from professors at peer universities who have taught quantum computing, and (4) discussed offering a quantum computing class with Paul Leidig (director of the school of computing),  Ed Abufadel (mathematics department chair who also has experience with quantum computing), and .... in physics.   %0a%3c %0a%3c # I first need to read through several textbooks and significantly improve my understanding of quantum computing.  I have the necessary educational background to learn and teach the course; but it will take some time.  (I have taken undergraduate courses in physics, as well as graduate courses in mathematics and computer science theory.)%0a---%0a> Thus far, I have (1) ordered some quantum computing books for the library, (2) examined the web pages of many courses on quantum computing, and (3) exchanged e-mails from professors at peer universities who have taught quantum computing, and (4) discussed offering a quantum computing class with Paul Leidig (director of the school of computing),  Ed Abufadel (mathematics department chair who also has experience with quantum computing), and .... in physics.   %0a> %0a> # I first need to read through ''foo'' and ''bar'' and significantly improve my understanding of quantum computing.  I have the necessary educational background to learn and teach the course; but it will take some time.  (I have taken undergraduate courses in physics, as well as graduate courses in mathematics and computer science theory.)%0a
host:1264692170=68.188.218.51
author:1264692123=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264692123:1264691806:=58,59c58%0a%3c I suspect that this course could eventually transform into a Honor's Program Junior seminar or ... category course.  However, those discussions with Dr. Chamberlin will have to wait until the end of this grant when I have a better idea of how accessible this course material is to students outside of the sciences.%0a%3c %0a---%0a> %0a
host:1264692123=68.188.218.51
author:1264691806=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264691806:1264691240:=67c67%0a%3c # Once I have covered the prerequisites,  I must identify those quantum computing topics that I will cover in the class.  I will be looking for those topics that are (1) fundamental to quantum computing, (2) accessible to the typical GVSU student, (3) of interest to the GVSU student, (4) will best bring together physics, mathematics, and computer science, (5) are most likely to get students thinking "outside the box". %0a---%0a> # Once I have covered the prerequisites,  I must identify those quantum computing topics that I will cover in the class.  I will be looking for those topics that are (1) fundamental to quantum computing, (2) accessible to the typical GVSU student, (3) of interest to the GVSU student, (4) will best bring together physics, mathematics, and computer science, (5) are most likely to get students thinking "outside the box".  The syllabi of other courses is fairly consistent; but, I suspect my course will go at a slower pace than the ones at Cal Tech and Berkeley, and thus I want to decide which topics have highest priority.%0a70,73c70,71%0a%3c  The syllabi and lesson plans of courses at other universities is readily available online.  However, these online resources tend to be from large and/or research-oriented universities such as Cal Tech, Berkeley, MIT, and Wisconsin.   Our top students can certainly handle the material from the courses at these other universities; however, GVSU has a smaller population of students who are willing and able to tackle the "Cal Tech"-style quantum computing course.  Thus, to keep the course attractive to enough GVSU students to fill the course will require a slower and gentler approach.   I have thus found three teaching-oriented schools that offer a course in quantum computing.  They all target the course to seniors with prerequiestes in linear algebra.  I want to make this course accessible to a wider audience.%0a%3c %0a%3c My goal is have a course ready to go by Fall 2010; however, the need for advertising and reality of university scheduling suggests the course will most likely have an initial offering no earlier than Fall 2011.%0a%3c %0a---%0a> The goal will be to have a course ready to go by Fall 2010; however, the reality of scheduling suggests the course will most likely have an initial offering no earlier than Fall 2011.%0a> %0a
host:1264691806=68.188.218.51
author:1264691240=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264691240:1264690815:=49,58c49,51%0a%3c My goal is to have a class of 22:  10 from computer science, 8 from mathematics, and 4 from physics.  I have contacted colleagues in Math and Physics and they believe these are reasonable goals.  Students will be interested in this course for several reasons:%0a%3c # It has a "science fiction" feel to it.%0a%3c # It will demonstrate a practical use for theoretical material that students otherwise don't anticipate using in their careers.%0a%3c %0a%3c The anticipated population of physics students is smaller than computer science or math because:%0a%3c # There are fewer physics majors%0a%3c # Physics majors have more theoretical interests than computer scientists, and are, therefore, less bothered by the "how am I going to use this" question.%0a%3c # Physics students will have taken computer programming, linear algebra, and quantum physics.  Therefore, I expect some physics students will opt not to take a class that repeats so much of what they already know.%0a%3c %0a%3c %0a---%0a> My goal is to have a class of 22:  10 from computer science, 8 from mathematics, and 4 from physics.  The %0a> %0a> %0a
host:1264691240=68.188.218.51
author:1264690815=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264690815:1264690563:=34,38c34,41%0a%3c The idea of existing in many states simultaneously, or a computer that produces random answers may seem absurd at first; however, physicists have repeatedly demonstrated these fantastic phenomena in the lab, and mathematicians have proved that we can effectively utilize probabilistic computation.   We are years away from a generally useful quantum computer; but scientists have built a working 8 qubit quantum computer. The students in this class are unlikely to use what they've learned directly to program a quantum computer.  However, the principles of massive parallelism and randomized computing that underlie quantum computing (massive parallelism and randomization) also apply to other new computing technologies (such as DNA computing).  Instead of directly applicable skills, the students will learn to broaden their view of computing so as to be better prepared for the next generation of computing technology. Quantum computing and other "science fiction" computing technologies are coming, and we should offer our students the opportunity to get ahead of the curve.%0a%3c %0a%3c %0a%3c We do have classical computing techniques that use both parallelism and randomization; however, the way we apply these techniques to classical computers does not translate directly to a quantum computer.  Today's computers are parallel in many different aspects:  The pipeline instructions (e.g., put them on an assembly line), have duplicate hardware so that they can process two instructions at once, some have multiple CPUs or cores on a single motherboard.  In almost all cases, we utilize this parallelism in the same way:  We take an traditional algorithm and look for steps that aren't dependent on each other, then somehow get those steps to execute in parallel.    The fundamental mindset is very similar to that used to develop a traditional sequential (i.e., "non-parallel") algorithm.  In contrast, a quantum computer is entirely parallel.    Algorithms must be designed with parallelism as a first thought, not an afterthought.    Similarly, we randomize algorithms in one of two ways:  (1) We randomly guess at answers until we get one we can verify is correct, or (2) we perform certain steps in a random order expecting to avoid pathological cases on average.  Again, in both cases we are applying randomization techniques to an inherently deterministic algorithm. %0a%3c %0a---%0a> The idea of existing in many states simultaneously, or a computer that produces random answers may seem absurd at first; however, physicists have repeatedly demonstrated these fantastic phenomena in the lab, and mathematicians have proved that we can effectively utilize probabilistic computation.   We are years away from a generally useful quantum computer; but scientists have built a working 8 qubit quantum computer.  Quantum computing and other "science fiction" computing technologies are coming, and we should offer our students the opportunity to get ahead of the curve.%0a> %0a> ''Finish description of quantum computers''%0a> %0a> At present only very small quantum computers exists (containing up to 8 qbits total).  We are years away from developing a completely functional, generally useful quantum computer.   The students in this class are unlikely to use what they've learned directly to program a quantum computer.  However, the principles of massive parallelism and randomized computing that underlie quantum computing (massive parallelism and randomization) also apply to other new computing technologies (such as DNA computing).  Instead of directly applicable skills, the students will learn to broaden their view of computing so as to be better prepared for the next generation of computing technology.%0a> %0a> We do have classical computing techniques that use both parallelism and randomization; however, the way we apply these techniques to classical computers does not translate directly to a quantum computer.  Today's computers are parallel in many different aspects:  The pipeline instructions (e.g., put them on an assembly line), have duplicate hardware so that they can process two instructions at once, some have multiple CPUs or cores on a single motherboard.  In almost all cases, we utilize this parallelism in the same way:  We take an traditional algorithm and look for steps that aren't dependent on each other, then somehow get those steps to execute in parallel.    The fundamental mindset is very similar to that used to develop a traditional non-parallel algorithm.  In contrast, a quantum computer is entirely parallel.    Algorithms must be designed with parallelism as a first thought, not an afterthought.    Similarly, we randomize algorithms in one of two ways:  (1) We randomly guess at answers until we get one we can verify is correct, or (2) we perform certain steps in a random order expecting to avoid pathological cases on average.  Again, in both cases we are applying randomization techniques to an inherently deterministic algorithm. %0a> %0a49,51c52,54%0a%3c My goal is to have a class of 22:  10 from computer science, 8 from mathematics, and 4 from physics.  The %0a%3c %0a%3c %0a---%0a> My goal is to have a class of 30:  10 each from computer science, mathematics, and physics.%0a> %0a> %0a
host:1264690815=68.188.218.51
author:1264690563=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264690563:1264690337:=34,35c34,35%0a%3c The idea of existing in many states simultaneously, or a computer that produces random answers may seem absurd at first; however, physicists have repeatedly demonstrated these fantastic phenomena in the lab, and mathematicians have proved that we can effectively utilize probabilistic computation.   We are years away from a generally useful quantum computer; but scientists have built a working 8 qubit quantum computer.  Quantum computing and other "science fiction" computing technologies are coming, and we should offer our students the opportunity to get ahead of the curve.%0a%3c %0a---%0a> The idea of existing in many states simultaneously, or a computer that produces random answers may seem absurd at first; however, physicists have shown that %0a> %0a
host:1264690563=68.188.218.51
author:1264690337=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264690337:1264689721:=30,35c30,31%0a%3c In contrast, quantum computers store information in quantum bits, or qbits.  Properties of quantum mechanics allow a qbit to have a state of 0, 1, or a "superposition" of 0 and 1.  This "superposition" means that the qubit simultaneously maintains a state of both 0 and 1.  This superposition property allows n qbits to maintain up to 2^n different states simultaneously.  Therefore,  we can then perform 2^n operations simultaneously.  %0a%3c %0a%3c Quantum computers are more than just massively parallel classical computers.   First, quantum computers are parallel on an entirely different scale.  The parallelism in a quantum computer grows exponentially with the number of qbits, whereas the parallelism in a classical computer can grow at most linearly in the number of logic gates. A quantum computer with only 100 qbits would, in theory, be more powerful than a classical computer build with every ounce of matter in the universe.  Second, quantum computers are not deterministic, they are probabilistic.  Although n qubits can exist in 2^n states simultaneously, we can only measure one of these states at a time, and the state that is measured is random.  Thus, quantum algorithms must be generated carefully so that repeated measurements will produce the correct answer with high probability.%0a%3c %0a%3c The idea of existing in many states simultaneously, or a computer that produces random answers may seem absurd at first; however, physicists have shown that %0a%3c %0a---%0a> In contrast, quantum computers store information in quantum bits, or qbits.  Properites of quantum mechanics allow a qbit to have a state of 0, 1, or a "superposition" of 0 and 1.  This "superposition" means that the qubit simultaneously maintains a state of both 0 and 1.  This superposition property allows n qbits to maintain up to 2^n different states simultaneously.   In some sense, we can then perform 2^n operations simultaneously.  %0a> %0a
host:1264690337=68.188.218.51
author:1264689721=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264689721:1264689461:=26,29c26,29%0a%3c Quantum computing is one emerging technology that can address both of these issues:  (1) Quantum computing uses a computation model that is very different from the one our students learn.  This model is similar to the models used by other emerging technologies, such as DNA computing.  Learning quantum computing should help get students out of their classical computing "rut".  (2) Quantum computing tightly integrates computer science, math, and physics.   Students must learn elements of all three to fully understand the topic.  They can't simply stuff the physics and math conveniently into a little black box for others to worry about.  They will see that developing new technology like quantum computing requires knowledge from several different disciplines.%0a%3c %0a%3c In a classical computer, information is stored in sets of "bits".  A bit is some physical device that can be in one of two states  "0" or "1" (or, if you prefer, "on" and "off", or "true" and "false").  A set n bits together can encode one of 2^n states.  Thus, for example, we can use 32 bits together to store one integer in the range of [0 to 2^32-1].  Classical computers then use logic gates to implement mathematical functions on these bits.  These functions form the basis for computation (addition, subtraction, comparison, etc.).  Classical computers are deterministic and sequential:  Given a given input, a deterministic computation always produces the same output; and, any given logic gate can perform only one computation at a time.%0a%3c %0a---%0a> Quantum computing is one emerging technology that can address both of these issues:  (1) Quantum computing uses a computation model that is very different from the one our students learn.  Learning quantum computing should help get students out of their classical computing "rut".  (2) Quantum computing tightly integrates computer science, math, and physics.   Students must learn elements of all three to fully understand the topic.  They can't simply stuff the physics and math conveniently into a little black box for others to worry about.  They will see that developing new technology like quantum computing requires knowledge from several different disciplines.%0a> %0a> In a classical computer, information is stored in sets of "bits".  A bit can be in one of two states "0" or "1".  n bits together can encode one of 2^n states.  Thus, for example, we can use 32 bits together to store one integer in the range of [0 to 2^32-1].  Classical computers then perform deterministic computations on these sets of bits:  Given a given input, a deterministic computation always produces the same output.%0a> %0a
host:1264689721=68.188.218.51
author:1264689461=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264689461:1264610784:=3,6c3,6%0a%3c In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on quantum computing.  A quantum computer is a "device for computation that makes direct use of quantum mechanical phenomena, such as superposition and entanglement" to process data.  This use of quantum phenomena allows a quantum computer to process data much more rapidly than a "classical" computer. Quantum computers use a model of computation that is very different from the "classical" model on which all current algorithm development is based.  This quantum model is very similar to the model utilized by other emerging computing technologies, such as DNA computing.  Thus, students who take this course will develop a broader perspective of computing that I believe will better position them to develop and utilize newly emerging computing technologies.%0a%3c %0a%3c This will be a truly interdisciplinary course.   Quantum computing very tightly integrates quantum physics, linear algebra, and algorithm analysis.  Aspects of each discipline are fundamental and critical to the understanding of quantum computing.  It is difficult, if not impossible to separate the subject into separate physics, math, and computer science components.  In contrast, most of the interdisciplinary projects I have heard about had a fairly clear separation between components and each discipline simply "served" the other (e.g., the computer scientist "served" the physicist by writing a computer program, or the physicist "served" the computer scientist by developing new and faster hardware.)  It is my expectation that this tighter coupling will encourage the students to work more closely with each other when studying and give students a deeper appreciation for dependencies between the sciences.%0a%3c %0a---%0a> In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on quantum computing.  A quantum computer is a "device for computation that makes direct use of quantum mechanical phenomena, such as superposition and entanglement" to process data.  This use of quantum phenomena allows a quantum computer to process data much more rapidly than a "classical" computer. Quantum computers use a model of computation that is very different from the "classical" model on which all current algorithm development is based.  Thus, students who take this course will develop a broader perspective of computing that I believe will better position them to develop and utilize newly emerging computing technologies.%0a> %0a> This will be a truly interdisciplinary course.   Quantum computing very tightly integrates quantum physics, linear algebra, and algorithm analysis.  Aspects of each discipline are fundamental and critical to the understanding of quantum computing.  It is difficult, if not impossible to separate the subject into separate physics, math, and computer science components.  I believe this course will require math, computer science, and physics students to work more closely together than traditional interdisciplinary projects where there the components are more clearly separated and each discipline is, in some sense, simply "serving" the other (e.g., the computer scientists is simply "serving" the physicist by writing a computer program, or the physicist is "serving" the computer scientist by developing new and faster hardware.)  It is my hope that this tighter coupling will encourage the students to work more closely with each other when studying and give students a deeper appreciation for dependencies between the sciences.%0a> %0a12,13c12,13%0a%3c First, quantum computing is different enough from traditional Computer Science that I won't be able to learn it quickly. (I certainly won't be able to prepare a course of acceptable quality by simply reading a chapter or two ahead of the students in the textbook!)  .  In addition, I suspect very few GVSU students currently take all the obvious pre-requsites for a quantum computing course (computer programming, linear algebra, and quantum mechanics).  Thus, as I prepare the course, I will also have to identify the set of topics in  linear algebra, computer programming, and quantum mechanics topics that are essential to the understand of quantum computing, then develop lectures that are accessible to a typical GVSU student.  (This may sound impossible; but, this approach has been used successfully at several "research" universities. I am confident I can modify their approach to make a quantum computing course interesting an accessible to a "critical mass" of Grand Valley students.)   Given the amount of time necessary to prepare this course, I am seeking a Pew FTLC grant in lieu of teaching this summer.%0a%3c %0a---%0a> First, quantum computing is different enough from traditional Computer Science that I won't be able to learn it quickly. (I certainly won't be able to prepare a course of acceptable quality by simply reading a chapter or two ahead of the students in the textbook!)  .  In addition, I suspect very few GVSU students currently take all the obvious pre-requsites for a quantum computing course (computer programming, linear algebra, and quantum mechanics).  Thus, as I prepare the course, I will also have to identify the set of topics in  linear algebra, computer programming, and quantum mechanics topics that are essential to the understand of quantum computing, then develop lectures that are accessible to a typical GVSU student.  (This may sound impossible; but, this approach has been used successfully at other universities.)   Given the amount of time necessary to prepare this course, I am seeking a Pew FTLC grant in lieu of teaching this summer.%0a> %0a57c57%0a%3c # Second, I must identify those math and quantum physics topics that are key to understanding quantum computing.  Formally requiring linear algebra and quantum mechanics would effectively limit my course to physics majors.  My preliminary work indicates that the amount of linear algebra and quantum mechanics necessary for a useful understanding of quantum computing is small enough to be reasonably taught as part of the course.  It is not sufficent to simply borrow a syllabus from another university because: ....%0a---%0a> # Second, I must identify those math and quantum physics topics that are key to understanding quantum computing.  Formally requiring linear algebra and quantum mechanics would effectively limit my course to physics majors.  My preliminary work indicates that the amount of linear algebra and quantum mechanics necessary for a useful understanding of quantum computing is small enough to be reasonably taught as part of the course.%0a
host:1264689461=68.188.218.51
author:1264610784=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264610784:1264609545:=36,37c36,37%0a%3c We do have classical computing techniques that use both parallelism and randomization; however, the way we apply these techniques to classical computers does not translate directly to a quantum computer.  Today's computers are parallel in many different aspects:  The pipeline instructions (e.g., put them on an assembly line), have duplicate hardware so that they can process two instructions at once, some have multiple CPUs or cores on a single motherboard.  In almost all cases, we utilize this parallelism in the same way:  We take an traditional algorithm and look for steps that aren't dependent on each other, then somehow get those steps to execute in parallel.    The fundamental mindset is very similar to that used to develop a traditional non-parallel algorithm.  In contrast, a quantum computer is entirely parallel.    Algorithms must be designed with parallelism as a first thought, not an afterthought.    Similarly, we randomize algorithms in one of two ways:  (1) We randomly guess at answers until we get one we can verify is correct, or (2) we perform certain steps in a random order expecting to avoid pathological cases on average.  Again, in both cases we are applying randomization techniques to an inherently deterministic algorithm. %0a%3c %0a---%0a> We do have classical computing techniques that use both parallelism and randomization; however, the way we apply these techniques to classical computers does not translate directly to a quantum computer.  %0a> %0a48,50d47%0a%3c My goal is to have a class of 30:  10 each from computer science, mathematics, and physics.%0a%3c %0a%3c %0a53,55c50,59%0a%3c %0a%3c Thus far, I have (1) ordered some quantum computing books for the library, (2) examined the web pages of many courses on quantum computing, and (3) exchanged e-mails from professors at peer universities who have taught quantum computing, and (4) discussed offering a quantum computing class with Paul Leidig (director of the school of computing),  Ed Abufadel (mathematics department chair who also has experience with quantum computing), and .... in physics.   %0a%3c %0a---%0a> [+ Preliminary Work +]%0a> Thus far, I have (1) ordered some quantum computing books for the library, (2) examined the web pages of many courses on quantum computing, and (3) exchanged e-mails from professors at peer universities who have taught quantum computing.   Existing quantum computing courses tend to fall into one of two categories:%0a> # A 200 level course with no formal pre-requsites, but a expectation that the student have "strong mathematical skills" or "familiarity" with math concepts such as linear algebra and complex numbers.%0a> # A 300 or 400-level course with strong mathematics,  physics and/or computing pre-requsites, or%0a> %0a> Option #1 is popular at  "R1" universities like Cal Tech, Berkeley, MIT, and Wisconsin.  Thus far, I have found only three "teaching-focused" universities that offer a course in quantum computing.  Both had specific prerequsites that would allow too few students into a similar course at GVSU.%0a> %0a> %0a> [+ Outline +]%0a> %0a96,105d99%0a%3c %0a%3c %0a%3c Existing quantum computing courses tend to fall into one of two categories:%0a%3c # A 200 level course with no formal pre-requsites, but a expectation that the student have "strong mathematical skills" or "familiarity" with math concepts such as linear algebra and complex numbers.%0a%3c # A 300 or 400-level course with strong mathematics,  physics and/or computing pre-requsites, or%0a%3c %0a%3c Option #1 is popular at  "R1" universities like Cal Tech, Berkeley, MIT, and Wisconsin.  Thus far, I have found only three "teaching-focused" universities that offer a course in quantum computing.  Both had specific prerequsites that would allow too few students into a similar course at GVSU.%0a%3c %0a%3c %0a%3c [+ Outline +]%0a
host:1264610784=148.61.80.162
author:1264609545=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264609545:1264600694:=25a26,29%0a> In a classical computer, information is stored in sets of "bits".  A bit can be in one of two states "0" or "1".  n bits together can encode one of 2^n states.  Thus, for example, we can use 32 bits together to store one integer in the range of [0 to 2^32-1].  Classical computers then perform computations on these sets of bits.  At any given time a single computing element in a classical computer can process only one set of bits at a time.%0a> %0a> In contrast, quantum computers store infomation in quantum bits, or qbits.  %0a> %0a28,37c32,35%0a%3c In a classical computer, information is stored in sets of "bits".  A bit can be in one of two states "0" or "1".  n bits together can encode one of 2^n states.  Thus, for example, we can use 32 bits together to store one integer in the range of [0 to 2^32-1].  Classical computers then perform deterministic computations on these sets of bits:  Given a given input, a deterministic computation always produces the same output.%0a%3c %0a%3c In contrast, quantum computers store information in quantum bits, or qbits.  Properites of quantum mechanics allow a qbit to have a state of 0, 1, or a "superposition" of 0 and 1.  This "superposition" means that the qubit simultaneously maintains a state of both 0 and 1.  This superposition property allows n qbits to maintain up to 2^n different states simultaneously.   In some sense, we can then perform 2^n operations simultaneously.  %0a%3c %0a%3c ''Finish description of quantum computers''%0a%3c %0a%3c At present only very small quantum computers exists (containing up to 8 qbits total).  We are years away from developing a completely functional, generally useful quantum computer.   The students in this class are unlikely to use what they've learned directly to program a quantum computer.  However, the principles of massive parallelism and randomized computing that underlie quantum computing (massive parallelism and randomization) also apply to other new computing technologies (such as DNA computing).  Instead of directly applicable skills, the students will learn to broaden their view of computing so as to be better prepared for the next generation of computing technology.%0a%3c %0a%3c We do have classical computing techniques that use both parallelism and randomization; however, the way we apply these techniques to classical computers does not translate directly to a quantum computer.  %0a%3c %0a---%0a> %0a> %0a> %0a> %0a
host:1264609545=148.61.80.162
author:1264600694=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264600694:1264544882:=3,6c3,6%0a%3c In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on quantum computing.  A quantum computer is a "device for computation that makes direct use of quantum mechanical phenomena, such as superposition and entanglement" to process data.  This use of quantum phenomena allows a quantum computer to process data much more rapidly than a "classical" computer. Quantum computers use a model of computation that is very different from the "classical" model on which all current algorithm development is based.  Thus, students who take this course will develop a broader perspective of computing that I believe will better position them to develop and utilize newly emerging computing technologies.%0a%3c %0a%3c This will be a truly interdisciplinary course.   Quantum computing very tightly integrates quantum physics, linear algebra, and algorithm analysis.  Aspects of each discipline are fundamental and critical to the understanding of quantum computing.  It is difficult, if not impossible to separate the subject into separate physics, math, and computer science components.  I believe this course will require math, computer science, and physics students to work more closely together than traditional interdisciplinary projects where there the components are more clearly separated and each discipline is, in some sense, simply "serving" the other (e.g., the computer scientists is simply "serving" the physicist by writing a computer program, or the physicist is "serving" the computer scientist by developing new and faster hardware.)  It is my hope that this tighter coupling will encourage the students to work more closely with each other when studying and give students a deeper appreciation for dependencies between the sciences.%0a%3c %0a---%0a> In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on quantum computing.  A quantum computer is a "device for computation that makes direct use of quantum mechanical phenomena, such as superposition and entanglement" to process data.  This use of quantum phenomena allows a quantum computer to process data much more rapidly than a "classical" computer. Quantum computers use a model of computation that is very different from the "classical" model on which all current algorithm development is based.  Thus, students who take this course will develop a broader perspective of computing that I believe will better position them to develop and utilize newly emerging computing technologies (including the multi-core and cell processors that are already common in consumer PCs). %0a> %0a> This will be a truly interdisciplinary course.   Quantum computing very tightly integrates quantum physics, linear algebra, and algorithm analysis.  Aspects of each discipline are fundamental and critical to the understanding of quantum computing.  It is difficult, if not impossible to separate the subject into separate physics, math, and computer science components.  I believe this course will require math, computer science, and physics students to work more closely together than traditional interdisciplinary projects where there the components are more clearly separated and each discipline is, in some sense, simply "serving" the other (e.g., the computer scientists is simply "serving" the physicist by writing a computer program, or the physicist is "serving" the computer scientist by developing new and faster hardware.)  It is my hope that this tighter coupling will give students a deeper appreciation for dependencies between the sciences.%0a> %0a12,13c12,13%0a%3c First, quantum computing is different enough from traditional Computer Science that I won't be able to learn it quickly. (I certainly won't be able to prepare a course of acceptable quality by simply reading a chapter or two ahead of the students in the textbook!)  .  In addition, I suspect very few GVSU students currently take all the obvious pre-requsites for a quantum computing course (computer programming, linear algebra, and quantum mechanics).  Thus, as I prepare the course, I will also have to identify the set of topics in  linear algebra, computer programming, and quantum mechanics topics that are essential to the understand of quantum computing, then develop lectures that are accessible to a typical GVSU student.  (This may sound impossible; but, this approach has been used successfully at other universities.)   Given the amount of time necessary to prepare this course, I am seeking a Pew FTLC grant in lieu of teaching this summer.%0a%3c %0a---%0a> First, quantum computing is different enough from traditional Computer Science that I won't be able to learn it quickly. (I certainly won't be able to prepare a course of acceptable quality by simply reading a chapter or two ahead of the students in the textbook!)  .  In addition, I suspect very few GVSU students currently take all the obvious pre-requsites for a quantum computing course (computer programming, linear algebra, and quantum mechanics).  Thus, as I prepare the course, I will also have to identify the set of topics in  linear algebra, computer programming, and quantum mechanics topics that are essential to the understand of quantum computing, then develop lectures that are accessible to a typical GVSU student.  (This may sound impossible; but, it has been used successfully at other universities.)   Given the amount of time necessary to prepare this course, I am seeking a Pew FTLC grant in lieu of teaching this summer.%0a> %0a24,29d23%0a%3c [+ Quantum Computing +]%0a%3c %0a%3c In a classical computer, information is stored in sets of "bits".  A bit can be in one of two states "0" or "1".  n bits together can encode one of 2^n states.  Thus, for example, we can use 32 bits together to store one integer in the range of [0 to 2^32-1].  Classical computers then perform computations on these sets of bits.  At any given time a single computing element in a classical computer can process only one set of bits at a time.%0a%3c %0a%3c In contrast, quantum computers store infomation in quantum bits, or qbits.  %0a%3c %0a32,35d25%0a%3c %0a%3c %0a%3c %0a%3c %0a
host:1264600694=148.61.80.162
author:1264544882=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264544882:1264543449:=3,4c3,4%0a%3c In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on quantum computing.  A quantum computer is a "device for computation that makes direct use of quantum mechanical phenomena, such as superposition and entanglement" to process data.  This use of quantum phenomena allows a quantum computer to process data much more rapidly than a "classical" computer. Quantum computers use a model of computation that is very different from the "classical" model on which all current algorithm development is based.  Thus, students who take this course will develop a broader perspective of computing that I believe will better position them to develop and utilize newly emerging computing technologies (including the multi-core and cell processors that are already common in consumer PCs). %0a%3c %0a---%0a> In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on quantum computing.  A quantum computer is a "device for computation that makes direct use of quantum mechanical phenomena, such as superposition and entanglement" to process data.  This use of quantum phenomena allows a quantum computer to process data much more rapidly than a "classical" computer. Quantum computers use a model of computation that is very different from the "classical" model on which all current algorithm development is based.  Thus, students who take this course will develop a broader perspective of computing that I believe will better position them to make use of newly emerging computing technologies (including the multi-core and cell processors that are already common in consumer PCs). %0a> %0a9,10c9,10%0a%3c In addition to the intangible benefits listed above my main tangible goals for this course are to (1) get more computer science students to voluntarily take other math and science courses, and (2) get more math and science majors to take more computing courses.  I explain these goals in Section 2.%0a%3c %0a---%0a> In addition to the intangible benefits listed above my main tangible goals for this course are to (1) Get more computer Science students to voluntarily take other math and science courses, and (2) get moer math and science majors to take more computing courses.  I explain these goals in Section 2.%0a> %0a12,13c12,14%0a%3c First, quantum computing is different enough from traditional Computer Science that I won't be able to learn it quickly. (I certainly won't be able to prepare a course of acceptable quality by simply reading a chapter or two ahead of the students in the textbook!)  .  In addition, I suspect very few GVSU students currently take all the obvious pre-requsites for a quantum computing course (computer programming, linear algebra, and quantum mechanics).  Thus, as I prepare the course, I will also have to identify the set of topics in  linear algebra, computer programming, and quantum mechanics topics that are essential to the understand of quantum computing, then develop lectures that are accessible to a typical GVSU student.  (This may sound impossible; but, it has been used successfully at other universities.)   Given the amount of time necessary to prepare this course, I am seeking a Pew FTLC grant in lieu of teaching this summer.%0a%3c %0a---%0a> First, quantum computing is different enough from traditional Computer Science that I won't be able to learn it quickly. (I certainly won't be able to prepare a course of acceptable quality by simply reading a chapter or two ahead of the students in the textbook!)  .  In addition, I suspect very few GVSU students currently take all the obvious pre-requsites for a quantum computing course (computer programming, linear algebra, and quantum mechanics).  Thus, as I prepare the course, I will also have to identify the set of topics in  Linear algebra, computer programming, and quantum mechanics topics that are essential to the understand of quantum computing, then develop lectures that are accessible to a general GVSU student.  (This may sound impossible; but, it has been used successfully at other universities.) One of the ways manage the large amount of time needed is to prepare the course in lieu of teaching a summer course.%0a> %0a> %0a16,17c17,18%0a%3c I do not believe we are preparing our students as well as we could to design and program the next generation of computing technology.  In particular, (1) our entire computing curriculum is based on the same model of computation we have used for 70 years.  We need to get our students thinking about computation at a higher level.  (2) Our students see the work of computer scientists and physicists as very separate and service oriented:  Physicists "serve" computer scientists by developing new technology on which we build faster computers while computer scientists serve physicists and other scientists by providing computers and computer software that helps them with their research.  Developing the next generation of of computing technology will require scientists of all disciplines to work more closely together.%0a%3c %0a---%0a> I do not believe we are preparing our students as well as we could to develop and use the next generation of computing technology.  In particular, (1) we are still projecting to our students the same model of computation we have used for 70 years.  We need to get our students thinking about computation at a higher level.  (2) Our students see the work of computer scientists and physicists as very separate and service oriented:  Physicists "serve" computer scientists by developing new technology on which we build faster computers while computer scientists serve physicists and other scientists by providing computers and computer software that helps them with their research.  Developing the next generation of of computing technology will require scientists of all disciplines to work more closely together.%0a> %0a20,21c21,22%0a%3c In spite of this paradigm change to increasingly parallel computation, we are still programming using the same "sequential" mental model we have had since the 1940's. We tend to write a computer program as if we were going to run it on a 1960's CPU, then try to "reorganize it" to effectively utilize a multi-core CPU.  In many cases this is a tedious and error-prone process.  In order to most effectively utilize the next generation of computing technology, we need to develop new models of computation: One where parallelism and randomization are primary concerns, not afterthoughts.%0a%3c %0a---%0a> In spite of this paradigm change to increasingly parallel computation, we are still programming using the same "sequential" mental model we have had since the 1940's. We tend to write a computer program as if we were going to run it on a 1960's CPU, then try to break it up and make it work on a multi-core CPU.  In many cases this is a tedious and error-prone process.  In order to most effectively utilize the next generation of computing technology, we need to develop new models of computation: One where parallelism and randomization are primary concerns, not afterthoughts.%0a> %0a24,25c25,26%0a%3c Quantum computing is one emerging technology that can address both of these issues:  (1) Quantum computing uses a computation model that is very different from the one our students learn.  Learning quantum computing should help get students out of their classical computing "rut".  (2) Quantum computing tightly integrates computer science, math, and physics.   Students must learn elements of all three to fully understand the topic.  They can't simply stuff the physics and math conveniently into a little black box for others to worry about.  They will see that developing new technology like quantum computing requires knowledge from several different disciplines.%0a%3c %0a---%0a> Quantum computing is one emerging technology that can address both of these issues:  (1) Quantum computing uses a computation model that is very different from the one our students learn.  Learning quantum computing should help get them  out of their classical computing "rut".  (2) Quantum computing tightly integrates computer science, math, and physics.   Students must learn elements of all three to fully understand the topic.  They can't simply stuff the physics and math conveniently into a little black box for others to worry about.  They will see that developing new technology like quantum computing requires knowledge from several different disciplines.%0a> %0a28,29c29,30%0a%3c I have both tangible and intangible goals for this course.  As discussed above, my intangible goals are to (1) get students out of their classical computing "rut" and (2) develop an appreciation for the benefit of taking a variety of science courses outside their discipline.   My tangible goals are to  (1) get Computer Science students to voluntarily take more math and science courses, and to (2) get more math and science majors to take more computing courses.  My intangible goal is to foster interdisciplinary interest between math, computer science, and physics at a level that will better enable our students to contribute to the development of the next generation of computing technology.%0a%3c %0a---%0a> I have both tangible and intangible goals for this course.  As discussed above, my intangible goals are to (1) get students out of their classical computing "rut" and (2) develop an appreciation for the benefit of taking a variety of science courses outside their discipline. .  My tangible goals are to  (1) get Computer Science students to voluntarily take more math and science courses, and to (2) get more math and science majors to take more computing courses.  My intangible goal is to foster interdisciplinary interest between math, computer science, and physics at a level that will better enable our students to contribute to the development of the next generation of computing technology.%0a> %0a
host:1264544882=148.61.80.162
author:1264543449=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264543449:1264543303:=7,8c7,8%0a%3c (For this grant, I am proposing a course that focuses on quantum computing and brings together math computer science and physics students.  In the long term, I would like to expand the course to cover other non-traditional computing paradigms such as DNA computing and nano-technology which would then include chemistry, biology, and other science students.)  %0a%3c %0a---%0a>  (For this grant, I am proposing a course that focuses on quantum computing and brings together math computer science and physics students.  In the long term, I would like to expand the course to cover other non-traditional computing paradigms such as DNA computing and nano-technology which would then include chemistry, biology, and other science students.)  %0a> %0a74,75c74,75%0a%3c I do not need any special equipment or facilities to execute this project.%0a%3c %0a---%0a> %0a> %0a
host:1264543449=148.61.80.162
author:1264543303=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264543303:1264538652:=57,58c57,58%0a%3c [+ Evaluation +]%0a%3c %0a---%0a> [+ Assessment +]%0a> %0a65,71d64%0a%3c [+ Dissemination +]%0a%3c %0a%3c I would disseminate my experiences with developing and teaching this course in several ways:%0a%3c # I would put my syllabus, assignments, and lecture notes on a publicly accessible web page for any instructor to use.%0a%3c # I would write a paper describing my experiences developing the course in a teaching-focused environment and submit it to SIGCSE (the premier conference in Computer Science education).  There have not yet been any papers discussing the teaching of quantum computing presented at SIGCSE (or in any other ACM publication); therefore, a well written, well supported paper would have a good chance of being accepted.%0a%3c # If the paper was well received at SIGCSE I would develop a workshop or tutorial on quantum computing to be presented at SIGCSE or at the regional CCSC (Consortium for Computer Science in Colleges) conferences.%0a%3c %0a
host:1264543303=148.61.80.162
author:1264538652=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264538652:1264538192:=49,52c49,51%0a%3c # I first need to read through ''foo'' and ''bar'' and significantly improve my understanding of quantum computing.  I have the necessary educational background to learn and teach the course; but it will take some time.  (I have taken undergraduate courses in physics, as well as graduate courses in mathematics and computer science theory.)%0a%3c # Second, I must identify those math and quantum physics topics that are key to understanding quantum computing.  Formally requiring linear algebra and quantum mechanics would effectively limit my course to physics majors.  My preliminary work indicates that the amount of linear algebra and quantum mechanics necessary for a useful understanding of quantum computing is small enough to be reasonably taught as part of the course.%0a%3c # Third, I must develop plans to teach the prerequisite material identified above.  Optionally, I may invite interested professors from math or physics to give these lectures.  In either case, I do want to be prepared to deliver the material myself.  (For example, in case I'd be asked a question in office hours.)%0a%3c # Once I have covered the prerequisites,  I must identify those quantum computing topics that I will cover in the class.  I will be looking for those topics that are (1) fundamental to quantum computing, (2) accessible to the typical GVSU student, (3) of interest to the GVSU student, (4) will best bring together physics, mathematics, and computer science, (5) are most likely to get students thinking "outside the box".  The syllabi of other courses is fairly consistent; but, I suspect my course will go at a slower pace than the ones at Cal Tech and Berkeley, and thus I want to decide which topics have highest priority.%0a---%0a> # I first need to read through ''foo'' and ''bar'' and significantly improve my understanding of quantum computing.%0a> # Second, I must identify those math and physics topics that are key to understanding quantum computing and develop plans to teach them to students who haven't otherwise had any physics or math beyond calculus.%0a> # Third, I must identify those quantum computing topics that I will cover in the class.  I will be looking for those topics that are (1) fundamental to quantum computing, (2) accessible to the typical GVSU student, (3) of interest to the GVSU student, (4) will best bring together physics, mathematics, and computer science, (5) are most likely to get students thinking "outside the box".%0a
host:1264538652=148.61.80.162
author:1264538192=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264538192:1264538048:=40,41c40%0a%3c Thus far, I have (1) ordered some quantum computing books for the library, (2) examined the web pages of many courses on quantum computing, and (3) exchanged e-mails from professors at peer universities who have taught quantum computing.   Existing quantum computing courses tend to fall into one of two categories:%0a%3c # A 200 level course with no formal pre-requsites, but a expectation that the student have "strong mathematical skills" or "familiarity" with math concepts such as linear algebra and complex numbers.%0a---%0a> Thus far, I have (1) ordered some quantum computing books for the library, and (2) examined the web pages of many courses on quantum computing.  Existing quantum computing courses tend to fall into one of two categories:%0a43,46c42,46%0a%3c %0a%3c Option #1 is popular at  "R1" universities like Cal Tech, Berkeley, MIT, and Wisconsin.  Thus far, I have found only three "teaching-focused" universities that offer a course in quantum computing.  Both had specific prerequsites that would allow too few students into a similar course at GVSU.%0a%3c %0a%3c %0a---%0a> # A 200 level course with no formal pre-requsites, but a expectation that the student have "strong mathematical skills" or "familiarity" with math concepts such as linear algebra and complex numbers.%0a> %0a> Option #2 is more common; but that reflects that the vast majority of courses are offered at "R1" universities like Cal Tech, Berkeley, MIT, Wisconsin.  I did find two "teaching-focused" universities that offer a course in quantum computing.  Both had specific prerequsites that would allow too few students into a similar course at GVSU.%0a> %0a> %0a
host:1264538192=148.61.80.162
author:1264538048=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264538048:1264537925:=29,30c29,31%0a%3c I have both tangible and intangible goals for this course.  As discussed above, my intangible goals are to (1) get students out of their classical computing "rut" and (2) develop an appreciation for the benefit of taking a variety of science courses outside their discipline. .  My tangible goals are to  (1) get Computer Science students to voluntarily take more math and science courses, and to (2) get more math and science majors to take more computing courses.  My intangible goal is to foster interdisciplinary interest between math, computer science, and physics at a level that will better enable our students to contribute to the development of the next generation of computing technology.%0a%3c %0a---%0a> I have both tangible and intangible goals for this course.  My tangible goals are to  (1) get Computer Science students to voluntarily take more math and science courses, and to (2) get more math and science majors to take more computing courses.  My intangible goal is to foster interdisciplinary interest between math, computer science, and physics at a level that will better enable our students to contribute to the development of the next generation of computing technology.%0a> %0a> [+ Tangible goals +]%0a36a38,56%0a> %0a> %0a> It is my intangible goal for this course that I get students out of the rut of seeing computation only in the traditional way.    I want them to realize there are other models of computation are out there and be prepared to work with, if not develop, them.%0a> %0a> %0a> [+ Problem Definition +]%0a> %0a> ''The field of computing has moved beyond simple programming.  In addition recent advances in technology have changed the way we should think about and write programs.  However, at a high level we are still thinking about programming as if it is 1960.  I want our graduates to see a bigger picture of computing.  I want them to think about programs in ways that don't look like the C programming language.  I also want them to realize that their role as computer scientists is more than simply writing software for a customer.   Likewise, I want other scientists to realize that the field of computing is more than people who write programs.  As a first step in this process I want to teach a course on alternative computing technologies:  Quantum computing, DNA computing, etc.''%0a> %0a> * Define quantum computing%0a> * Define DNA computing%0a> %0a> ''Emphasize how these fields are tightly coupled with other fields, not simply a "service" we provide.  Also emphasize how they require very different ways of looking at problems:  A broader perspective that will benefit any GVSU graduate.''%0a> %0a> %0a> Challenges:%0a> %0a> * Bring very advanced material down to a level accessible to the typical GVSU student.%0a> %0a
host:1264538048=148.61.80.162
author:1264537925=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264537925:1264536040:=11c11%0a%3c I am seeking FTLC support because preparing this course will take significantly more time and effort that preparing a new "traditional" Computer Science course:%0a---%0a> I am seeking FTLC support because preparing this course will take significatnly more time and effort that preparing a new "traditional" Computer Science course:%0a15,26d14%0a%3c [++ Problem Statement ++]%0a%3c %0a%3c I do not believe we are preparing our students as well as we could to develop and use the next generation of computing technology.  In particular, (1) we are still projecting to our students the same model of computation we have used for 70 years.  We need to get our students thinking about computation at a higher level.  (2) Our students see the work of computer scientists and physicists as very separate and service oriented:  Physicists "serve" computer scientists by developing new technology on which we build faster computers while computer scientists serve physicists and other scientists by providing computers and computer software that helps them with their research.  Developing the next generation of of computing technology will require scientists of all disciplines to work more closely together.%0a%3c %0a%3c Until about 2000, we improved the computational power of the CPU primarily by either (1) making the individual components smaller and faster, or (2) adding instruction level parallelism (automatically identifying two or more individual computational steps that could be done at the same time).  Beginning about 10 years ago, heat dissipation and other fundamental physical issues began to limit the amount of improvement that we could obtain by simply making the chip smaller and faster.  At the same time, we also began to reach the limit of the performance improvement we could get by adding instruction level parallelism (you can do only so many things at one time before dependencies accrue).  In response, multi-core and cell processors have become popular.  These processors don't automatically find work that can be done in parallel:  The programmer must explicitly write the program to utilize all the cores.  %0a%3c %0a%3c In spite of this paradigm change to increasingly parallel computation, we are still programming using the same "sequential" mental model we have had since the 1940's. We tend to write a computer program as if we were going to run it on a 1960's CPU, then try to break it up and make it work on a multi-core CPU.  In many cases this is a tedious and error-prone process.  In order to most effectively utilize the next generation of computing technology, we need to develop new models of computation: One where parallelism and randomization are primary concerns, not afterthoughts.%0a%3c %0a%3c We should involve all scientists in this process of developing new computational models because any model of computation is necessarily related to the underlying implementation.  For example, our "traditional"  model of computation follows directly from the initial design of computers in the 1930s and 1940s. Our problem is that we are still using this model even though our implementations are beginning to change.  Because the model and the implementation are related, the design of new computing technologies needs to involve the close cooperation of both computer scientists who specialize in computation and the physicists, chemists, and engineers who research and design the computing device.    To do this computer scientists need to know about natural processes (such as quantum mechanics and chemical reactions) that can perform computations, and physicists and chemists need to understand computation at a higher level that just writing computer programs so that they can recognize when their innovations can potentially be used for computation.%0a%3c %0a%3c Quantum computing is one emerging technology that can address both of these issues:  (1) Quantum computing uses a computation model that is very different from the one our students learn.  Learning quantum computing should help get them  out of their classical computing "rut".  (2) Quantum computing tightly integrates computer science, math, and physics.   Students must learn elements of all three to fully understand the topic.  They can't simply stuff the physics and math conveniently into a little black box for others to worry about.  They will see that developing new technology like quantum computing requires knowledge from several different disciplines.%0a%3c %0a39,42c27,39%0a%3c %0a%3c It is my intangible goal for this course that I get students out of the rut of seeing computation only in the traditional way.    I want them to realize there are other models of computation are out there and be prepared to work with, if not develop, them.%0a%3c %0a%3c %0a---%0a> [+ Intangible goal +]%0a> %0a> %0a> ''Prepare all students for the future of computing by getting them to think about computing in non-traditional ways:'' Up until about 2000, we improved the computational power of the CPU primarily by either (1) making the individual components smaller and faster, or (2) adding instruction level parallelism (automatically identifying two or more individual computational steps that could be done at the same time).  Beginning about 10 years ago, heat dissipation and other fundamental physical issues began to limit the amount of improvement that we could obtain by simply making the chip smaller and faster.  At the same time, we also began to reach the limit of the performance improvement we could get by adding instruction level parallelism (you can do only so many things at one time before dependencies accrue).  In response, multi-core and cell processors have become popular.  These processors don't automatically find work that can be done in parallel:  The programmer must explicitly write the program to utilize all the cores.  %0a> %0a> In spite of this paradigm change to increasingly parallel computation, we are still programming using the same "sequential" mental model we have had since the 1940's. We tend to write a computer program as if we were going to run it on a 1960's CPU, then try to break it up and make it work on a multi-core CPU.  In many cases this is a tedious and error-prone process.  In order to most effectively utilize the next generation of computing technology, we need to develop new models of computation: One where parallelism and randomization are primary concerns, not afterthoughts.%0a> %0a> We should involve all scientists in this process of developing new computational models because any model of computation is necessarily related to the underlying implementation.  For example, our "traditional"  model of computation follows directly from the initial design of computers in the 1930s and 1940s. Our problem is that we are still using this model even though our implementations are beginning to change.  Because the model and the implementation are related, the design of new computing technologies needs to involve the close cooperation of both computer scientists who specialize in computation and the physicists, chemists, and engineers who research and design the computing device.    To do this computer scientists need to know about natural processes (such as quantum mechanics and chemical reactions) that can perform computations, and physicists and chemists need to understand computation at a higher level that just writing computer programs so that they can recognize when their innovations can potentially be used for computation.%0a> %0a> Quantum computing %0a> %0a> By introducing them to topics such as quantum computing I hope to get them thinking about computation in a much more flexible way, thereby better preparing them to adopt whatever programming models are developed to support the next generation of computing technology.%0a> %0a90,93d86%0a%3c %0a%3c %0a%3c ''Prepare all students for the future of computing by getting them to think about computing in non-traditional ways:''%0a%3c %0a
host:1264537925=148.61.80.162
author:1264536040=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264536040:1264534294:=14a15,16%0a> %0a> %0a17,19c19,20%0a%3c I have both tangible and intangible goals for this course.  My tangible goals are to  (1) get Computer Science students to voluntarily take more math and science courses, and to (2) get more math and science majors to take more computing courses.  My intangible goal is to foster interdisciplinary interest between math, computer science, and physics at a level that will better enable our students to contribute to the development of the next generation of computing technology.%0a%3c %0a%3c [+ Tangible goals +]%0a---%0a> I have both tangible and intangible goals for this course.  My tangible goals are to  (1) get Computer Science students to voluntarily take more math and science courses, and to (2) get moer math and science majors to take more computing courses.  My intangible goals are to foster interdisciplinary interest between math, computer science, and physics at a level that will better enable our students to contribute to the development of the next generation of computing technology.%0a> %0a24,39c25,32%0a%3c ''Get more math and physics majors to enroll in more Computer Science courses:''   Students from many majors take one of our programming courses (CS 160, CS 162, or CS 261).    These students tend to take the course to learn basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  In other words, they see computer scientists as simply a service that provides computer programs to assist them in their work.  By showing these students that computing is much bigger than programming, I hope to pique their interest in computing as a whole. Those scientists who have a higher-level view of computing will be better positioned to develop the next generation of computing technology.  They will get this perspective only by enrolling in Computer Science courses that go beyond programming.   It is my hope that science students who may not enjoy programming will be interested enough in the higher-level ideas to complement their major with more computing courses.%0a%3c %0a%3c %0a%3c [+ Intangible goal +]%0a%3c %0a%3c %0a%3c ''Prepare all students for the future of computing by getting them to think about computing in non-traditional ways:'' Up until about 2000, we improved the computational power of the CPU primarily by either (1) making the individual components smaller and faster, or (2) adding instruction level parallelism (automatically identifying two or more individual computational steps that could be done at the same time).  Beginning about 10 years ago, heat dissipation and other fundamental physical issues began to limit the amount of improvement that we could obtain by simply making the chip smaller and faster.  At the same time, we also began to reach the limit of the performance improvement we could get by adding instruction level parallelism (you can do only so many things at one time before dependencies accrue).  In response, multi-core and cell processors have become popular.  These processors don't automatically find work that can be done in parallel:  The programmer must explicitly write the program to utilize all the cores.  %0a%3c %0a%3c In spite of this paradigm change to increasingly parallel computation, we are still programming using the same "sequential" mental model we have had since the 1940's. We tend to write a computer program as if we were going to run it on a 1960's CPU, then try to break it up and make it work on a multi-core CPU.  In many cases this is a tedious and error-prone process.  In order to most effectively utilize the next generation of computing technology, we need to develop new models of computation: One where parallelism and randomization are primary concerns, not afterthoughts.%0a%3c %0a%3c We should involve all scientists in this process of developing new computational models because any model of computation is necessarily related to the underlying implementation.  For example, our "traditional"  model of computation follows directly from the initial design of computers in the 1930s and 1940s. Our problem is that we are still using this model even though our implementations are beginning to change.  Because the model and the implementation are related, the design of new computing technologies needs to involve the close cooperation of both computer scientists who specialize in computation and the physicists, chemists, and engineers who research and design the computing device.    To do this computer scientists need to know about natural processes (such as quantum mechanics and chemical reactions) that can perform computations, and physicists and chemists need to understand computation at a higher level that just writing computer programs so that they can recognize when their innovations can potentially be used for computation.%0a%3c %0a%3c Quantum computing %0a%3c %0a%3c By introducing them to topics such as quantum computing I hope to get them thinking about computation in a much more flexible way, thereby better preparing them to adopt whatever programming models are developed to support the next generation of computing technology.%0a%3c %0a---%0a> ''Get more math and physics majors to enroll in more Computer Science courses:''   Students from many majors take one of our programming courses (CS 160, CS 162, or CS 261).    These students tend to take the course to learn basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  By showing these students that computing is much bigger than programming, I hope to pique their interest in computing as a whole. Those scientists who have a higher-level view of computing will be better positioned to develop the next generation of computing technology.  They will get this perspective only by enrolling in Computer Science courses that go beyond programming.   It is my hope that science students who may not enjoy programming will be interested enough in the higher-level ideas to complement their major with more computing courses.%0a> %0a> %0a> %0a> %0a> %0a> ''Prepare all students for the future of computing by getting them to think about computing in non-traditional ways:'' Up until about 2000, we improved the computational power of the CPU primarily by making it smaller and faster.  Beginning about 10 years ago, heat dissipation and other fundamental physical issues began to limit the amount of improvement that we could obtain by simply making the chip smaller and faster.  At the same time, we also began to reach the limit of the performance improvement we could get by making CPU pipelines deeper and wider.  In response, multi-core and cell processors have become popular.  In spite of this paradigm change to increasingly parallel computation, we are still teaching programming using the same "sequential" mental model we have had since the 1940's. By introducing them to topics such as quantum computing I hope to get them thinking about computation in a much more flexible way, thereby better preparing them to adopt whatever programming models are developed to support the next generation of computing technology.%0a> %0a
host:1264536040=148.61.80.162
author:1264534294=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264534294:1264533102:=9,11c9,14%0a%3c In addition to the intangible benefits listed above my main tangible goals for this course are to (1) Get more computer Science students to voluntarily take other math and science courses, and (2) get moer math and science majors to take more computing courses.  I explain these goals in Section 2.%0a%3c %0a%3c I am seeking FTLC support because preparing this course will take significatnly more time and effort that preparing a new "traditional" Computer Science course:%0a---%0a> In addition to the intangible benefits listed above my main tangible goals for this course are to %0a> # Get more computer Science students to voluntarily take other math and science courses.  Many Computer Science majors complain about their required calculus and discrete math courses.  Some simply don't like the subject; others don't see the benefit of learning the material (i.e., how they will use the material on the job). Many of the mathematics and physics concepts fundamental to Computer Science get abstracted away as "black boxes".  Thus, the students don't understand why they need to know this material.  They think it can be simply "outsourced" to the mathematicians, physicists and engineers. One goal of this course is to teach them a developing technology for which the computer scientists *must* understand the underlying math and physics to use effectively.  It is my hope that students who take this course will understand how knowledge of math, physics, and other sciences will be valuable to them as new technologies come to market and be motivated to willingly enroll in more math and science courses (physics, chemistry, etc.)%0a> # Get more math and physics majors to enroll in more Computer Science courses.   Students from many majors take one of our programming courses (CS 160, CS 162, or CS 261).    These students tend to take the course to learn basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  By showing these students that computing is much bigger than programming, I hope to pique their interest in computing as a whole. Those scientists who have a higher-level view of computing will be better positioned to develop the next generation of computing technology.  They will get this perspective only by enrolling in Computer Science courses that go beyond programming.   It is my hope that science students who may not enjoy programming will be interested enough in the higher-level ideas to complement their major with more computing courses.%0a> %0a> %0a> I am seeking FTLC support because preparing this course will take considerably more time and effort that preparing a new "traditional" Computer Science course:%0a15,30c18,26%0a%3c %0a%3c %0a%3c [++ Program Objectives ++]%0a%3c %0a%3c I have both tangible and intangible goals for this course.  My tangible goals are to  (1) get Computer Science students to voluntarily take more math and science courses, and to (2) get moer math and science majors to take more computing courses.  My intangible goals are to foster interdisciplinary interest between math, computer science, and physics at a level that will better enable our students to contribute to the development of the next generation of computing technology.%0a%3c %0a%3c ''Get more computer Science students to voluntarily take other math and science courses.''  Many Computer Science majors complain about their required calculus and discrete math courses.  Some simply don't like the subject; others don't see the benefit of learning the material (i.e., how they will use the material on the job). Many of the mathematics and physics concepts fundamental to Computer Science get abstracted away as "black boxes".  For example, in our Computer Organization class (CS 251) we present logic gates as a black box that computes a logical AND, OR, or NOT function. These "boxes" are, of course, built from transistors.  Because our students don't need to know how the transistors work or are organized, many don't appreciate the benefit of understanding the physics, chemistry, and engineering behind the gates.  %0a%3c %0a%3c Many of our students see the physics, chemistry, and mathematics underlying computer science as tasks that can be  "outsourced" to the mathematicians, physicists and engineers.  They don't see any direct benefit to learning this underlying material themselves.   One goal of this course is to teach them a developing technology for which the computer scientists *must* understand the underlying math and physics to use effectively.  It is my hope that students who take this course will understand how knowledge of math, physics, and other sciences will be valuable to them as new technologies come to market and be motivated to willingly enroll in more math and science courses.%0a%3c %0a%3c ''Get more math and physics majors to enroll in more Computer Science courses:''   Students from many majors take one of our programming courses (CS 160, CS 162, or CS 261).    These students tend to take the course to learn basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  By showing these students that computing is much bigger than programming, I hope to pique their interest in computing as a whole. Those scientists who have a higher-level view of computing will be better positioned to develop the next generation of computing technology.  They will get this perspective only by enrolling in Computer Science courses that go beyond programming.   It is my hope that science students who may not enjoy programming will be interested enough in the higher-level ideas to complement their major with more computing courses.%0a%3c %0a%3c %0a%3c %0a%3c %0a%3c %0a---%0a> [+ Program Objectives +]%0a> %0a> My main goals for this course are to: (1) Get Computer Science students to voluntarily take more math and science courses, (2) Get math and science majors to take more computing courses, and (3) Prepare all students for the future of computing by getting them to think about computing in non-traditional ways.%0a> %0a> %0a> ''Get Computer Science students to voluntarily take more math and science courses:''  Most Computer Science majors complain about the calculus and discrete math they are required to take.  Some simply don't like the subject; others don't see how the material benefits them in their careers. Computer Science courses tend to abstract away much of the underlying mathematics and physics concepts.  These concepts can be treated as "black boxes" that other people worry about.  As a result,  the students don't understand why they need to know this material.  They think it can be simply "outsourced" to the mathematicians, physicists and engineers.  By teaching  them about some developing technologies for which the computer scientists *must* understand the underlying math and physics to use effectively, I hope to develop their interest in these subjects to the point where they will take a few math and science courses voluntarily.%0a> %0a> ''Get more math, physics, and chemistry majors interested in computer science:''   Students from many majors take our introduction to programming course.    These students tend to take the course to learn some basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  Understanding computational thinking in a broader sense than just writing computer programs can help direct advances in mathematics, physics, and chemistry.%0a> %0a
host:1264534294=148.61.80.162
author:1264533102=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264533102:1264532626:=15,17c15,16%0a%3c First, quantum computing is different enough from traditional Computer Science that I won't be able to learn it quickly. (I certainly won't be able to prepare a course of acceptable quality by simply reading a chapter or two ahead of the students in the textbook!)  .  In addition, I suspect very few GVSU students currently take all the obvious pre-requsites for a quantum computing course (computer programming, linear algebra, and quantum mechanics).  Thus, as I prepare the course, I will also have to identify the set of topics in  Linear algebra, computer programming, and quantum mechanics topics that are essential to the understand of quantum computing, then develop lectures that are accessible to a general GVSU student.  (This may sound impossible; but, it has been used successfully at other universities.) One of the ways manage the large amount of time needed is to prepare the course in lieu of teaching a summer course.%0a%3c %0a%3c %0a---%0a> I have the background necessary to learn the material (including some graduate work in mathematics); but, it is far enough removed from traditional Computer Science that I won't be able to learn it quickly. (I certainly won't be able to prepare a course of acceptable quality by simply reading a chapter or two ahead of the students in the textbook!)  One of the ways to get the necessary time is to prepare for the course in lieu of teaching a summer course.  %0a> %0a
host:1264533102=148.61.80.162
author:1264532626=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264532626:1264532360:=11,13c11,15%0a%3c # Get more math and physics majors to enroll in more Computer Science courses.   Students from many majors take one of our programming courses (CS 160, CS 162, or CS 261).    These students tend to take the course to learn basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  By showing these students that computing is much bigger than programming, I hope to pique their interest in computing as a whole. Those scientists who have a higher-level view of computing will be better positioned to develop the next generation of computing technology.  They will get this perspective only by enrolling in Computer Science courses that go beyond programming.   It is my hope that science students who may not enjoy programming will be interested enough in the higher-level ideas to complement their major with more computing courses.%0a%3c %0a%3c %0a---%0a> # Get more math and physics majors to enroll in more Computer Science courses.   Students from many majors take one of our programming courses (CS 160, CS 162, or CS 261).    These students tend to take the course to learn basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  By showing these students that computing is much bigger than programming, I hope to pique their interest in computing as a whole. Those scientists who have a higher-level view of computing will be better positioned to develop the next generation of computing technology.  They will get this perspective only by enrolling in Computer Science courses that go beyond programming.%0a> %0a> %0a> # Get all students to approach computing in a new and different way.  Although the programming languages and hardware have changed, the underlying mental model of computation has not changed much in 70 years.    Now that most PCs sold today contain a multi-core CPU, we need to get out of our "rut" and get the next generation of scientists (not just Computer Scientists) thinking about other models of computation.  Quantum computing presents one such alternative model.  It is my hope that by getting students to see there is more than one model, I will help them contribute to the next generation of computing technology.%0a> %0a
host:1264532626=148.61.80.162
author:1264532360=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264532360:1264530408:=11,13c11,13%0a%3c # Get more math and physics majors to enroll in more Computer Science courses.   Students from many majors take one of our programming courses (CS 160, CS 162, or CS 261).    These students tend to take the course to learn basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  By showing these students that computing is much bigger than programming, I hope to pique their interest in computing as a whole. Those scientists who have a higher-level view of computing will be better positioned to develop the next generation of computing technology.  They will get this perspective only by enrolling in Computer Science courses that go beyond programming.%0a%3c %0a%3c %0a---%0a> # Get more math and physics majors to enroll in more Computer Science courses.   Students from many majors take our introduction to programming course (CS 162).    These students tend to take the course to learn basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  Understanding computational thinking in a broader sense than just writing computer programs can help direct advances in mathematics, physics, and chemistry.%0a> %0a> %0a
host:1264532360=148.61.80.162
author:1264530408=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264530408:1264521398:=3,6c3,6%0a%3c In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on quantum computing.  A quantum computer is a "device for computation that makes direct use of quantum mechanical phenomena, such as superposition and entanglement" to process data.  This use of quantum phenomena allows a quantum computer to process data much more rapidly than a "classical" computer. Quantum computers use a model of computation that is very different from the "classical" model on which all current algorithm development is based.  Thus, students who take this course will develop a broader perspective of computing that I believe will better position them to make use of newly emerging computing technologies (including the multi-core and cell processors that are already common in consumer PCs). %0a%3c %0a%3c This will be a truly interdisciplinary course.   Quantum computing very tightly integrates quantum physics, linear algebra, and algorithm analysis.  Aspects of each discipline are fundamental and critical to the understanding of quantum computing.  It is difficult, if not impossible to separate the subject into separate physics, math, and computer science components.  I believe this course will require math, computer science, and physics students to work more closely together than traditional interdisciplinary projects where there the components are more clearly separated and each discipline is, in some sense, simply "serving" the other (e.g., the computer scientists is simply "serving" the physicist by writing a computer program, or the physicist is "serving" the computer scientist by developing new and faster hardware.)  It is my hope that this tighter coupling will give students a deeper appreciation for dependencies between the sciences.%0a%3c %0a---%0a> In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on quantum computing.  A quantum computer is a "device for computation that makes direct use of quantum mechanical phenomena, such as superposition and entaglement" to process data.  This use of quantum phenomena allows a quantum computer to process data much more rapidly than a "classical" computer; however, the model of computation is very different from the model on which all current algorithm development is based.  Thus, students who take this course will develop a broader perspective of computing that I believe will better position them to make use of newly emerging computing technologies.  %0a> %0a> This will be a truly interdisciplinary course.   Quantum computing very tightly integrates quantum physics, linear algebra, and algorithm analysis.  Aspects of each discipline are fundamental and critical to the understanding of quantum computing.  It is difficult, if not impossible to separate the subject into separate physics, math, and computer science components.  I believe this course will require math, computer science, and physics students to work more closely together than with traditional interdisciplinary projects where there the components are more clearly separated and each discipline is, in some sense, simply "serving" the other (e.g., the computer scientists is simply "serving" the physicist by writing a computer program, or the physicist is "serving" the computer scientist by developing new and faster hardware.)%0a> %0a9,13c9,13%0a%3c In addition to the intangible benefits listed above my main tangible goals for this course are to %0a%3c # Get more computer Science students to voluntarily take other math and science courses.  Many Computer Science majors complain about their required calculus and discrete math courses.  Some simply don't like the subject; others don't see the benefit of learning the material (i.e., how they will use the material on the job). Many of the mathematics and physics concepts fundamental to Computer Science get abstracted away as "black boxes".  Thus, the students don't understand why they need to know this material.  They think it can be simply "outsourced" to the mathematicians, physicists and engineers. One goal of this course is to teach them a developing technology for which the computer scientists *must* understand the underlying math and physics to use effectively.  It is my hope that students who take this course will understand how knowledge of math, physics, and other sciences will be valuable to them as new technologies come to market and be motivated to willingly enroll in more math and science courses (physics, chemistry, etc.)%0a%3c # Get more math and physics majors to enroll in more Computer Science courses.   Students from many majors take our introduction to programming course (CS 162).    These students tend to take the course to learn basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  Understanding computational thinking in a broader sense than just writing computer programs can help direct advances in mathematics, physics, and chemistry.%0a%3c %0a%3c %0a---%0a> As explained above, my intangible goals for this course are to (1) get students (all students, not just computer science students) to develop a broader view of computing, and (2) get math, computer science, and physics students to develop a deeper appreciation of each other's disciplines (beyond a "service" perspective).%0a> %0a> My main tangible goals for this course are to:%0a> # Get computer Science students more interested in taking other math and science courses.  Most of our majors complain about the calculus and discrete math they are required to take.  Some simply don't like the subject; others don't see how the material will benefit them in their careers. Many of the mathematics and physics concepts fundamental to Computer Science get abstracted away as "black boxes".  Thus, the students don't understand why they need to know this material.  They think it can be simply "outsourced" to the mathematicians, physicists and engineers. One goal of this course is to show them some developing technologies for which the computer scientists *must* understand the underlying math and physics to use effectively.  It is my hope that students who take this course will be motivated to willingly enroll in more math and science courses (physics, chemistry, etc.)%0a> # Get more math, physics, and chemistry majors interested in computer science.   Students from many majors take our introduction to programming course.    These students tend to take the course to learn some basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  Understanding computational thinking in a broader sense than just writing computer programs can help direct advances in mathematics, physics, and chemistry.%0a
host:1264530408=148.61.80.162
author:1264521398=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264521398:1264521215:=9,11c9,10%0a%3c As explained above, my intangible goals for this course are to (1) get students (all students, not just computer science students) to develop a broader view of computing, and (2) get math, computer science, and physics students to develop a deeper appreciation of each other's disciplines (beyond a "service" perspective).%0a%3c %0a%3c My main tangible goals for this course are to:%0a---%0a> As explained above, my intangible goals for this course are to %0a> My main goals for this course are to:%0a
host:1264521398=148.61.80.162
author:1264521215=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264521215:1264456846:=2,9c2,3%0a%3c %0a%3c In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on quantum computing.  A quantum computer is a "device for computation that makes direct use of quantum mechanical phenomena, such as superposition and entaglement" to process data.  This use of quantum phenomena allows a quantum computer to process data much more rapidly than a "classical" computer; however, the model of computation is very different from the model on which all current algorithm development is based.  Thus, students who take this course will develop a broader perspective of computing that I believe will better position them to make use of newly emerging computing technologies.  %0a%3c %0a%3c This will be a truly interdisciplinary course.   Quantum computing very tightly integrates quantum physics, linear algebra, and algorithm analysis.  Aspects of each discipline are fundamental and critical to the understanding of quantum computing.  It is difficult, if not impossible to separate the subject into separate physics, math, and computer science components.  I believe this course will require math, computer science, and physics students to work more closely together than with traditional interdisciplinary projects where there the components are more clearly separated and each discipline is, in some sense, simply "serving" the other (e.g., the computer scientists is simply "serving" the physicist by writing a computer program, or the physicist is "serving" the computer scientist by developing new and faster hardware.)%0a%3c %0a%3c  (For this grant, I am proposing a course that focuses on quantum computing and brings together math computer science and physics students.  In the long term, I would like to expand the course to cover other non-traditional computing paradigms such as DNA computing and nano-technology which would then include chemistry, biology, and other science students.)  %0a%3c %0a%3c As explained above, my intangible goals for this course are to %0a---%0a> In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on quantum computing.  (In the long term, I would like to expand the course to cover other non-traditional computing paradigms such as DNA computing.)  This will be a truly interdisciplinary course.   Quantum computing very tightly integrates quantum physics, linear algebra, and algorithm analysis.  Aspects of each discipline are fundamental and critical to the understanding of quantum computing.  It is difficult, if not impossible to separate the subject into separate physics, math, and computer science components.%0a> %0a
host:1264521215=148.61.80.162
author:1264456846=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264456846:1264456290:=9,11c9,14%0a%3c I am seeking FTLC support because preparing this course will take considerably more time and effort that preparing a new "traditional" Computer Science course:%0a%3c I have the background necessary to learn the material (including some graduate work in mathematics); but, it is far enough removed from traditional Computer Science that I won't be able to learn it quickly. (I certainly won't be able to prepare a course of acceptable quality by simply reading a chapter or two ahead of the students in the textbook!)  One of the ways to get the necessary time is to prepare for the course in lieu of teaching a summer course.  %0a%3c %0a---%0a> It is appropriate for FTLC to fund the development of this course because:%0a> # It will take significantly more time and effort to prepare than a typical course.  The proposed course material is new and different enough from the core of Computer Science that it will take me a significant amount of time to learn it.  I will not be able to prepare a course of GVSU quality by simply reading a chapter or two ahead of the students in the textbook.%0a> # Preparing this course requires me to develop an interdisciplinary teaching style:  Traditional courses on quantum computing assume the student already has knowledge of linear algebra and some basic quantum physics.  This is not a reasonable assumption at GVSU.  I will have to teach the students the necessary linear algebra and physics --- potentially requring different teaching techniques that I traditional use in CS. %0a> # The interdisciplinary goals of the course are well-aligned with the goals of the FTLC.%0a> # This course is far enough from the "core" of computer science to fall outside the scope of normal course development.   It will be many years before the technologies discussed in this course are developed enough to become an essential part of the computer science curriculum.  Thus, this project is likely to be done only with the assistance of organizations like FTLC.%0a> %0a
host:1264456846=148.61.80.162
author:1264456290=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264456290:1264454875:=2,3c2,6%0a%3c In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on quantum computing.  (In the long term, I would like to expand the course to cover other non-traditional computing paradigms such as DNA computing.)  This will be a truly interdisciplinary course.   Quantum computing very tightly integrates quantum physics, linear algebra, and algorithm analysis.  Aspects of each discipline are fundamental and critical to the understanding of quantum computing.  It is difficult, if not impossible to separate the subject into separate physics, math, and computer science components.%0a%3c %0a---%0a> In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on quantum computing.  (In the long term, I would like to expand the course to cover other non-traditional computing paradigms such as DNA computing.)%0a> This course will provide two key benefits to students not found in typical GVSU courses:%0a> # It will be a truly interdisciplinary course.  Many interdisciplinary courses choose problems that contain components from different disciplines.  In contrast,  quantum computing very tightly integrates quantum physics, linear algebra, and algorithm analysis.  Aspects of each discipline are fundamental and critical to the understanding of quantum computing.  It is difficult, if not impossible to separate the subject into physics, math, and computer science components.%0a> # It will exercise students' critical thinking and logic skills by requiring them to adopt entirely new mental models of computation.  Our model of how computers work and how computer programs are written has changed very little since the 1940s.  Even the increasing popularity of multi-core and cell processors has not significantly changed the way we think about and teach computer programming.  This course will require students to think about programming in a completely new way.%0a> %0a5c8%0a%3c # Get computer Science students more interested in taking other math and science courses.  Most of our majors complain about the calculus and discrete math they are required to take.  Some simply don't like the subject; others don't see how the material will benefit them in their careers. Many of the mathematics and physics concepts fundamental to Computer Science get abstracted away as "black boxes".  Thus, the students don't understand why they need to know this material.  They think it can be simply "outsourced" to the mathematicians, physicists and engineers. One goal of this course is to show them some developing technologies for which the computer scientists *must* understand the underlying math and physics to use effectively.  It is my hope that students who take this course will be motivated to willingly enroll in more math and science courses (physics, chemistry, etc.)%0a---%0a> # Get computer Science students more interested in taking other math and science courses.  Most of our majors complain about the calculus and discrete math they are required to take.  Some simply don't like the subject; others don't see how the material benefits them in their careers. Many of the mathematics and physics concepts fundamental to Computer Science get abstracted away as "black boxes".  Thus, the students don't understand why they need to know this material.  They think it can be simply "outsourced" to the mathematicians, physicists and engineers. One goal of this course is to show them some developing technologies for which the computer scientists *must* understand the underlying math and physics to use effectively.  It is my hope that these students would then be motivated to willingly enroll in more math and science courses (physics, chemistry, etc.)%0a7,8c10,11%0a%3c # Get all students to approach computing in a new and different way.  Although the programming languages and hardware have changed, the underlying mental model of computation has not changed much in 70 years.    Now that most PCs sold today contain a multi-core CPU, we need to get out of our "rut" and get the next generation of scientists (not just Computer Scientists) thinking about other models of computation.  Quantum computing presents one such alternative model.  It is my hope that by getting students to see there is more than one model, I will help them contribute to the next generation of computing technology.%0a%3c %0a---%0a> %0a> %0a
host:1264456290=148.61.80.162
author:1264454875=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264454875:1264453447:=1,2c1,3%0a%3c [++ Brief Summary ++] %0a%3c In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on quantum computing.  (In the long term, I would like to expand the course to cover other non-traditional computing paradigms such as DNA computing.)%0a---%0a> [+ Brief Summary+] %0a> In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on "non-traditional" computing.  This course will discuss several techniques that may replace our current "classical" model of computation built upon transistors and logic gates.  Two example technologies are quantum computing and DNA computing.%0a> %0a43,73c44,50%0a%3c [++ Plans ++]%0a%3c %0a%3c [+ Preliminary Work +]%0a%3c Thus far, I have (1) ordered some quantum computing books for the library, and (2) examined the web pages of many courses on quantum computing.  Existing quantum computing courses tend to fall into one of two categories:%0a%3c # A 300 or 400-level course with strong mathematics,  physics and/or computing pre-requsites, or%0a%3c # A 200 level course with no formal pre-requsites, but a expectation that the student have "strong mathematical skills" or "familiarity" with math concepts such as linear algebra and complex numbers.%0a%3c %0a%3c Option #2 is more common; but that reflects that the vast majority of courses are offered at "R1" universities like Cal Tech, Berkeley, MIT, Wisconsin.  I did find two "teaching-focused" universities that offer a course in quantum computing.  Both had specific prerequsites that would allow too few students into a similar course at GVSU.%0a%3c %0a%3c %0a%3c [+ Outline +]%0a%3c %0a%3c # I first need to read through ''foo'' and ''bar'' and significantly improve my understanding of quantum computing.%0a%3c # Second, I must identify those math and physics topics that are key to understanding quantum computing and develop plans to teach them to students who haven't otherwise had any physics or math beyond calculus.%0a%3c # Third, I must identify those quantum computing topics that I will cover in the class.  I will be looking for those topics that are (1) fundamental to quantum computing, (2) accessible to the typical GVSU student, (3) of interest to the GVSU student, (4) will best bring together physics, mathematics, and computer science, (5) are most likely to get students thinking "outside the box".%0a%3c # Develop lesson plans and assignments.%0a%3c %0a%3c The goal will be to have a course ready to go by Fall 2010; however, the reality of scheduling suggests the course will most likely have an initial offering no earlier than Fall 2011.%0a%3c %0a%3c [+ Assessment +]%0a%3c %0a%3c The primary assessment of any course is whether the students learned the material.  I will do that through standard means including tests, problem sets, and group presentations.%0a%3c %0a%3c To assess whether the course meets its goal of encouraging students to voluntarily enroll in science and math courses outside their major, I can (1) hand out a survey during the last week of class to see which courses they are not considering enrolling in (2)  follow up with the students after two years to see which courses they actually enrolled in, or (3) (with their permission) use banner to watch the classes they enroll in.%0a%3c %0a%3c I'm not sure its feasible to test the benefits of exposing students to other models of computation / getting them to think outside the box.  I can use standard classroom examinations to measure whether the understood the new paradigm, but I suspect that only time will tell just how much these students benefit directly from the experience.%0a%3c %0a%3c [++ Facilities ++]%0a%3c %0a%3c %0a%3c %0a---%0a> [+ Plans +]%0a> %0a> %0a> [+ Facilities +]%0a> %0a> %0a> %0a79,82d55%0a%3c %0a%3c %0a%3c  techniques that may replace our current "classical" model of computation built upon transistors and logic gates.  Two example technologies are quantum computing and DNA computing.%0a%3c %0a
host:1264454875=148.61.80.162
author:1264453447=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264453447:1264452302:=
host:1264453447=148.61.80.162
author:1264452302=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264452302:1264445672:=32,43c32,33%0a%3c ''The field of computing has moved beyond simple programming.  In addition recent advances in technology have changed the way we should think about and write programs.  However, at a high level we are still thinking about programming as if it is 1960.  I want our graduates to see a bigger picture of computing.  I want them to think about programs in ways that don't look like the C programming language.  I also want them to realize that their role as computer scientists is more than simply writing software for a customer.   Likewise, I want other scientists to realize that the field of computing is more than people who write programs.  As a first step in this process I want to teach a course on alternative computing technologies:  Quantum computing, DNA computing, etc.''%0a%3c %0a%3c * Define quantum computing%0a%3c * Define DNA computing%0a%3c %0a%3c ''Emphasize how these fields are tightly coupled with other fields, not simply a "service" we provide.  Also emphasize how they require very different ways of looking at problems:  A broader perspective that will benefit any GVSU graduate.''%0a%3c %0a%3c %0a%3c Challenges:%0a%3c %0a%3c * Bring very advanced material down to a level accessible to the typical GVSU student.%0a%3c %0a---%0a> Today's CPUs work in very much the same way as the very first electronic CPUs.    Transistors have replaced vacuum tubes and relays; and we are building more and more parallelism (the ability to do multiple things at once) into the CPUs; hover, the primary mental model is the same:  A CPU executes a sequence of simple operations (add, subtract, compare, etc.)%0a> %0a47,55c37%0a%3c [+ Facilities +]%0a%3c %0a%3c %0a%3c %0a%3c -----%0a%3c %0a%3c The field of Computing has changed dramatically over the past 20 years; but we have not done a good job conveying this to our students and our other scientists who use computing technology.   Many people still incorrectly believe that Computer Science is just writing computer programs.    Students who beieve t%0a%3c %0a%3c The fundamental principles of CPU design have not changed in 70 years.    Transistors have replaced vacuum tubes and relays; and we are building more and more parallelism (the ability to do multiple things at once) into the CPUs; however, the primary mental model is the same:  A CPU executes a sequence of simple operations (add, subtract, compare, etc.).  Modern CPUs execute small groups of related instructions in parallel and occasionally synchronize their results.  Around 2000 we began to really feel the limitations of this model:   Heat dissipation and other fundamental physical issues began to limit the amount of improvement that we could obtain by simply making the chip smaller and faster.  At the same time, we had made the chips as *implicitly* parallel as practical.%0a---%0a> [+ Facilities +]%0a\ No newline at end of file%0a
host:1264452302=148.61.80.162
author:1264445672=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264445672:1264445356:=28,37c28%0a%3c ''Prepare all students for the future of computing by getting them to think about computing in non-traditional ways:'' Up until about 2000, we improved the computational power of the CPU primarily by making it smaller and faster.  Beginning about 10 years ago, heat dissipation and other fundamental physical issues began to limit the amount of improvement that we could obtain by simply making the chip smaller and faster.  At the same time, we also began to reach the limit of the performance improvement we could get by making CPU pipelines deeper and wider.  In response, multi-core and cell processors have become popular.  In spite of this paradigm change to increasingly parallel computation, we are still teaching programming using the same "sequential" mental model we have had since the 1940's. By introducing them to topics such as quantum computing I hope to get them thinking about computation in a much more flexible way, thereby better preparing them to adopt whatever programming models are developed to support the next generation of computing technology.%0a%3c %0a%3c [+ Problem Definition +]%0a%3c %0a%3c Today's CPUs work in very much the same way as the very first electronic CPUs.    Transistors have replaced vacuum tubes and relays; and we are building more and more parallelism (the ability to do multiple things at once) into the CPUs; hover, the primary mental model is the same:  A CPU executes a sequence of simple operations (add, subtract, compare, etc.)%0a%3c %0a%3c [+ Plans +]%0a%3c %0a%3c %0a%3c [+ Facilities +]%0a\ No newline at end of file%0a---%0a> ''Prepare all students for the future of computing by getting them to think about computing in non-traditional ways:'' Up until about 2000, we improved the computational power of the CPU primarily by making it smaller and faster.  Beginning about 10 years ago, heat dissipation and other fundamental physical issues began to limit the amount of improvement that we could obtain by simply making the chip smaller and faster.  At the same time, we also began to reach the limit of the performance improvement we could get by making CPU pipelines deeper and wider.  In response, multi-core and cell processors have become popular.  In spite of this paradigm change to increasingly parallel computation, we are still teaching programming using the same "sequential" mental model we have had since the 1940's. By introducing them to topics such as quantum computing I hope to get them thinking about computation in a much more flexible way, thereby better preparing them to adopt whatever programming models are developed to support the next generation of computing technology.%0a\ No newline at end of file%0a
host:1264445672=148.61.80.162
author:1264445356=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264445356:1264443063:=28c28%0a%3c ''Prepare all students for the future of computing by getting them to think about computing in non-traditional ways:'' Up until about 2000, we improved the computational power of the CPU primarily by making it smaller and faster.  Beginning about 10 years ago, heat dissipation and other fundamental physical issues began to limit the amount of improvement that we could obtain by simply making the chip smaller and faster.  At the same time, we also began to reach the limit of the performance improvement we could get by making CPU pipelines deeper and wider.  In response, multi-core and cell processors have become popular.  In spite of this paradigm change to increasingly parallel computation, we are still teaching programming using the same "sequential" mental model we have had since the 1940's. By introducing them to topics such as quantum computing I hope to get them thinking about computation in a much more flexible way, thereby better preparing them to adopt whatever programming models are developed to support the next generation of computing technology.%0a\ No newline at end of file%0a---%0a> ''Prepare all students for the future of computing by getting them to think about computing in non-traditional ways:'' Up until about 2000, we improved the computational power of the CPU primarily by making it smaller and faster.  Beginning about 10 years ago, heat dissipation and other fundamental physical issues began to limit the amount of improvement that we could obtain by simply making the chip smaller and faster.  At the same time, we also began to reach the limit of the performance improvement we could get by making CPU pipelines deeper and wider.  In response, multi-core and cell processors have become popular.  In spite%0a\ No newline at end of file%0a
host:1264445356=148.61.80.162
author:1264443063=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264443063:1264442927:=28c28%0a%3c ''Prepare all students for the future of computing by getting them to think about computing in non-traditional ways:'' Up until about 2000, we improved the computational power of the CPU primarily by making it smaller and faster.  Beginning about 10 years ago, heat dissipation and other fundamental physical issues began to limit the amount of improvement that we could obtain by simply making the chip smaller and faster.  At the same time, we also began to reach the limit of the performance improvement we could get by making CPU pipelines deeper and wider.  In response, multi-core and cell processors have become popular.  In spite %0a\ No newline at end of file%0a---%0a> ''Prepare all students for the future of computing by getting them to think about computing in non-traditional ways:'' Up until about 2000, we improved the computational power of the CPU primarily by making it smaller and faster.  Beginning about 10 years ago, heat dissipation issues%0a\ No newline at end of file%0a
host:1264443063=148.61.80.162
author:1264442927=Prepare all students for the future of computing by getting them to think about computing in non-traditional ways
diff:1264442927:1264440589:=24,28c24,26%0a%3c ''Get Computer Science students to voluntarily take more math and science courses:''  Most Computer Science majors complain about the calculus and discrete math they are required to take.  Some simply don't like the subject; others don't see how the material benefits them in their careers. Computer Science courses tend to abstract away much of the underlying mathematics and physics concepts.  These concepts can be treated as "black boxes" that other people worry about.  As a result,  the students don't understand why they need to know this material.  They think it can be simply "outsourced" to the mathematicians, physicists and engineers.  By teaching  them about some developing technologies for which the computer scientists *must* understand the underlying math and physics to use effectively, I hope to develop their interest in these subjects to the point where they will take a few math and science courses voluntarily.%0a%3c %0a%3c ''Get more math, physics, and chemistry majors interested in computer science:''   Students from many majors take our introduction to programming course.    These students tend to take the course to learn some basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  Understanding computational thinking in a broader sense than just writing computer programs can help direct advances in mathematics, physics, and chemistry.%0a%3c %0a%3c ''Prepare all students for the future of computing by getting them to think about computing in non-traditional ways:'' Up until about 2000, we improved the computational power of the CPU primarily by making it smaller and faster.  Beginning about 10 years ago, heat dissipation issues %0a\ No newline at end of file%0a---%0a> "Get Computer Science students to voluntarily take more math and science courses:"  Most Computer Science majors complain about the calculus and discrete math they are required to take.  Some simply don't like the subject; others don't see how the material benefits them in their careers. Computer Science courses tend to abstract away much of the underlying mathematics and physics concepts.  These concepts can be treated as "black boxes" that other people worry about.  As a result,  the students don't understand why they need to know this material.  They think it can be simply "outsourced" to the mathematicians, physicists and engineers.  By teaching  them about some developing technologies for which the computer scientists *must* understand the underlying math and physics to use effectively, I hope to develop their interest in these subjects to the point where they will take a few math and science courses voluntarily.%0a> %0a> # Get more math, physics, and chemistry majors interested in computer science.   Students from many majors take our introduction to programming course.    These students tend to take the course to learn some basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  Understanding computational thinking in a broader sense than just writing computer programs can help direct advances in mathematics, physics, and chemistry.%0a
host:1264442927=148.61.80.162
author:1264440589=
diff:1264440589:1264438731:=1d0%0a%3c [+ Brief Summary+] %0a17,26c16%0a%3c # This course is far enough from the "core" of computer science to fall outside the scope of normal course development.   It will be many years before the technologies discussed in this course are developed enough to become an essential part of the computer science curriculum.  Thus, this project is likely to be done only with the assistance of organizations like FTLC.%0a%3c %0a%3c [+ Program Objectives +]%0a%3c %0a%3c My main goals for this course are to: (1) Get Computer Science students to voluntarily take more math and science courses, (2) Get math and science majors to take more computing courses, and (3) Prepare all students for the future of computing by getting them to think about computing in non-traditional ways.%0a%3c %0a%3c %0a%3c "Get Computer Science students to voluntarily take more math and science courses:"  Most Computer Science majors complain about the calculus and discrete math they are required to take.  Some simply don't like the subject; others don't see how the material benefits them in their careers. Computer Science courses tend to abstract away much of the underlying mathematics and physics concepts.  These concepts can be treated as "black boxes" that other people worry about.  As a result,  the students don't understand why they need to know this material.  They think it can be simply "outsourced" to the mathematicians, physicists and engineers.  By teaching  them about some developing technologies for which the computer scientists *must* understand the underlying math and physics to use effectively, I hope to develop their interest in these subjects to the point where they will take a few math and science courses voluntarily.%0a%3c %0a%3c # Get more math, physics, and chemistry majors interested in computer science.   Students from many majors take our introduction to programming course.    These students tend to take the course to learn some basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  Understanding computational thinking in a broader sense than just writing computer programs can help direct advances in mathematics, physics, and chemistry.%0a---%0a> # This course is far enough from the "core" of computer science to fall outside the scope of normal course development.   It will be many years before the technologies discussed in this course are developed enough to become an essential part of the computer science curriculum.  Thus, this project is likely to be done only with the assistance of%0a\ No newline at end of file%0a
host:1264440589=148.61.80.162
author:1264438731=
diff:1264438731:1264438204:=11c11,13%0a%3c %0a---%0a>  %0a> %0a> %0a13,14c15,17%0a%3c # It will take significantly more time and effort to prepare than a typical course.  The proposed course material is new and different enough from the core of Computer Science that it will take me a significant amount of time to learn it.  I will not be able to prepare a course of GVSU quality by simply reading a chapter or two ahead of the students in the textbook.%0a%3c # Preparing this course requires me to develop an interdisciplinary teaching style:  Traditional courses on quantum computing assume the student already has knowledge of linear algebra and some basic quantum physics.  This is not a reasonable assumption at GVSU.  I will have to teach the students the necessary linear algebra and physics --- potentially requring different teaching techniques that I traditional use in CS. %0a---%0a> # It will take significantly more time and effort to prepare than a typical course.  %0a> ##The proposed course material is new and different enough from the core of Computer Science that it will take me a significant amount of time to learn it.  I will not be able to prepare a course of GVSU quality by simply reading a chapter or two ahead of the students in the textbook.%0a> ## The material relies on knowledge specific to several disciplines.  Because very few, if any, GVSU students will have the "obvious" pre-requsites, I will have to encorporate  %0a16c19%0a%3c # This course is far enough from the "core" of computer science to fall outside the scope of normal course development.   It will be many years before the technologies discussed in this course are developed enough to become an essential part of the computer science curriculum.  Thus, this project is likely to be done only with the assistance of %0a\ No newline at end of file%0a---%0a> # This course is far enough from the "core" of computer science to fall outside the scope of normal course development.   It will be many years before the technologies discussed in this course are developed enough to become an essential part of the computer science cirriculum.  Thus, this project is likely to be done only with the%0a\ No newline at end of file%0a
host:1264438731=148.61.80.162
author:1264438204=
diff:1264438204:1264437719:=9,13c9,11%0a%3c # Get more math, physics, and chemistry majors interested in computer science.   Students from many majors take our introduction to programming course.    These students tend to take the course to learn some basic programming, then go back to their majors thinking that computer programs is the only thing computing has to offer their discipline.  Understanding computational thinking in a broader sense than just writing computer programs can help direct advances in mathematics, physics, and chemistry.%0a%3c %0a%3c  %0a%3c %0a%3c %0a---%0a> # Get more math, physics, and chemistry majors interested in computer science.  %0a> %0a> %0a15,19c13%0a%3c # It will take significantly more time and effort to prepare than a typical course.  %0a%3c ##The proposed course material is new and different enough from the core of Computer Science that it will take me a significant amount of time to learn it.  I will not be able to prepare a course of GVSU quality by simply reading a chapter or two ahead of the students in the textbook.%0a%3c ## The material relies on knowledge specific to several disciplines.  Because very few, if any, GVSU students will have the "obvious" pre-requsites, I will have to encorporate  %0a%3c # The interdisciplinary goals of the course are well-aligned with the goals of the FTLC.%0a%3c # This course is far enough from the "core" of computer science to fall outside the scope of normal course development.   It will be many years before the technologies discussed in this course are developed enough to become an essential part of the computer science cirriculum.  Thus, this project is likely to be done only with the %0a\ No newline at end of file%0a---%0a> # It will take significantly more time and effort to prepare than a typical course.  The proposed course material is new and different enough from the core of Computer Science that it will take me a significant amount of time to learn it.  I will not be able to prepare a course of GVSU quality by simply reading a chapter or two ahead of the students in the textbook.%0a\ No newline at end of file%0a
host:1264438204=148.61.80.162
author:1264437719=
diff:1264437719:1264437465:=8,12c8,11%0a%3c # Get computer Science students more interested in taking other math and science courses.  Most of our majors complain about the calculus and discrete math they are required to take.  Some simply don't like the subject; others don't see how the material benefits them in their careers. Many of the mathematics and physics concepts fundamental to Computer Science get abstracted away as "black boxes".  Thus, the students don't understand why they need to know this material.  They think it can be simply "outsourced" to the mathematicians, physicists and engineers. One goal of this course is to show them some developing technologies for which the computer scientists *must* understand the underlying math and physics to use effectively.  It is my hope that these students would then be motivated to willingly enroll in more math and science courses (physics, chemistry, etc.)%0a%3c # Get more math, physics, and chemistry majors interested in computer science.  %0a%3c %0a%3c %0a%3c It is appropriate for FTLC to fund the development of this course because:%0a---%0a> # Get computer Science students more interested in taking other math and science courses.  Most of our majors complain about the calculus and discrete math they are required to take.  Some simply don't like the subject; others don't see how the material benefits them in their careers. Many of the mathematics and physics concepts fundamental to Computer Science get abstracted away as "black boxes".  Thus, the students don't understand why they need to know this material.  They think it can be simply "outsourced" to the mathematicians, physicists and engineers. One goal of this course is to show them a %0a> %0a> %0a> It is appropriate for FTLC to fund the development#  of this course because:%0a
host:1264437719=148.61.80.162
author:1264437465=
diff:1264437465:1264436542:=4,12c4,6%0a%3c # It will be a truly interdisciplinary course.  Many interdisciplinary courses choose problems that contain components from different disciplines.  In contrast,  quantum computing very tightly integrates quantum physics, linear algebra, and algorithm analysis.  Aspects of each discipline are fundamental and critical to the understanding of quantum computing.  It is difficult, if not impossible to separate the subject into physics, math, and computer science components.%0a%3c # It will exercise students' critical thinking and logic skills by requiring them to adopt entirely new mental models of computation.  Our model of how computers work and how computer programs are written has changed very little since the 1940s.  Even the increasing popularity of multi-core and cell processors has not significantly changed the way we think about and teach computer programming.  This course will require students to think about programming in a completely new way.%0a%3c %0a%3c My main goals for this course are to:%0a%3c # Get computer Science students more interested in taking other math and science courses.  Most of our majors complain about the calculus and discrete math they are required to take.  Some simply don't like the subject; others don't see how the material benefits them in their careers. Many of the mathematics and physics concepts fundamental to Computer Science get abstracted away as "black boxes".  Thus, the students don't understand why they need to know this material.  They think it can be simply "outsourced" to the mathematicians, physicists and engineers. One goal of this course is to show them a %0a%3c %0a%3c %0a%3c It is appropriate for FTLC to fund the development#  of this course because:%0a%3c # It will take significantly more time and effort to prepare than a typical course.  The proposed course material is new and different enough from the core of Computer Science that it will take me a significant amount of time to learn it.  I will not be able to prepare a course of GVSU quality by simply reading a chapter or two ahead of the students in the textbook.%0a\ No newline at end of file%0a---%0a> # It will be a truly interdisciplinary course.  Many interdisciplinary courses choose problems that contain components from different disciplines.  In contrast,  quantum computing very tightly integrates quantum physics, linear algebra, and algorithm analysis.  Aspects of each discipline are fundamental and critical to the understanding %0a> of quantum computing.  It is difficult, if not impossible to separate the subject into physics, math, and computer science components.%0a> # It will exercise students' critical thinking and logic skills by requiring them to adopt entirely new mental models of computation.  Our model of how computers work and how computer programs are written has changed very little since the 1940s.  Even the increasing popularity of multi-core and cell processors has not significantly changed the way we think about and teach computer programming.  This course will require students to think about programming in a completely new way.%0a\ No newline at end of file%0a
host:1264437465=148.61.80.162
author:1264436542=
diff:1264436542:1264425690:=1,6c1,2%0a%3c In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to develop a new interdisciplinary course on "non-traditional" computing.  This course will discuss several techniques that may replace our current "classical" model of computation built upon transistors and logic gates.  Two example technologies are quantum computing and DNA computing.%0a%3c %0a%3c This course will provide two key benefits to students not found in typical GVSU courses:%0a%3c # It will be a truly interdisciplinary course.  Many interdisciplinary courses choose problems that contain components from different disciplines.  In contrast,  quantum computing very tightly integrates quantum physics, linear algebra, and algorithm analysis.  Aspects of each discipline are fundamental and critical to the understanding %0a%3c of quantum computing.  It is difficult, if not impossible to separate the subject into physics, math, and computer science components.%0a%3c # It will exercise students' critical thinking and logic skills by requiring them to adopt entirely new mental models of computation.  Our model of how computers work and how computer programs are written has changed very little since the 1940s.  Even the increasing popularity of multi-core and cell processors has not significantly changed the way we think about and teach computer programming.  This course will require students to think about programming in a completely new way.   %0a\ No newline at end of file%0a---%0a> In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to prepare a course on non-traditional computing.  This course would teach students about several techniques that may replace our current "classical" model of computation built upon transistors and logic gates.%0a> %0a
host:1264436542=148.61.80.162
author:1264425690=
diff:1264425690:1264425690:=1,2d0%0a%3c In lieu of teaching a summer course, I would like to use an FTLC Scholar Teacher Grant to prepare a course on non-traditional computing.  This course would teach students about several techniques that may replace our current "classical" model of computation built upon transistors and logic gates.%0a%3c %0a
host:1264425690=68.188.218.51
