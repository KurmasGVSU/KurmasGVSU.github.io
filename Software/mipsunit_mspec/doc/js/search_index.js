var search_data = {"index":{"searchIndex":["mipsunit","mspec","assembly","assemblylabel","dsl","datalabel","generator","global","invalidspecexception","label","runner","testdefinition","testdefinitiongroup","testfactory","al","testfactoryhelper","util","util","add_data_label()","add_group()","all_labels()","ancestor_labels()","assert_label_not_defined_in_group_scope()","assert_label_not_defined_in_object_scope()","assert_register_not_at()","before()","call()","call_by_name()","cumulative_before()","cumulative_description()","data()","data()","data()","data!()","data_item_to_string()","data_labels()","descendant_labels()","describe()","describe()","fail_unless()","generate()","get_integer_value()","get_label_string()","global()","groups()","is_register?()","is_size_directive?()","it()","local_data_labels()","local_name()","lookup_unique_name()","make_data_string()","make_group()","make_test()","metadata()","new()","new()","new()","new()","new()","new()","new()","new()","print_labels()","print_lw()","print_single_warning()","process_expected_memory_value()","process_file()","quit()","randomize_preserved()","register_to_string()","remove_warning_from_data_method()","reset()","run()","run_and_rescue()","set()","set_address()","set_boolean()","set_integer()","set_register()","size_of()","to_s()","unique_name()","usage()","validate_register()","verify()","verify_memory()","verify_memory_array()","verify_memory_memory()","verify_register()","license"],"longSearchIndex":["mipsunit","mipsunit::mspec","mipsunit::mspec::assembly","mipsunit::mspec::assemblylabel","mipsunit::mspec::dsl","mipsunit::mspec::datalabel","mipsunit::mspec::generator","mipsunit::mspec::global","mipsunit::mspec::invalidspecexception","mipsunit::mspec::label","mipsunit::mspec::runner","mipsunit::mspec::testdefinition","mipsunit::mspec::testdefinitiongroup","mipsunit::mspec::testfactory","mipsunit::mspec::testfactory::al","mipsunit::mspec::testfactoryhelper","mipsunit::mspec::util","mipsunit::mspec::util::util","mipsunit::mspec::testdefinitiongroup#add_data_label()","mipsunit::mspec::global#add_group()","mipsunit::mspec::datalabel::all_labels()","mipsunit::mspec::testdefinitiongroup#ancestor_labels()","mipsunit::mspec::testdefinitiongroup#assert_label_not_defined_in_group_scope()","mipsunit::mspec::testdefinitiongroup#assert_label_not_defined_in_object_scope()","mipsunit::mspec::testfactory#assert_register_not_at()","mipsunit::mspec::testfactory::before()","mipsunit::mspec::testfactory#call()","mipsunit::mspec::testfactory#call_by_name()","mipsunit::mspec::testdefinitiongroup#cumulative_before()","mipsunit::mspec::testdefinitiongroup#cumulative_description()","mipsunit::mspec::testfactory::data()","mipsunit::mspec::testfactory#data()","mipsunit::mspec::testfactoryhelper::data()","mipsunit::mspec::testfactory#data!()","mipsunit::mspec::datalabel::data_item_to_string()","mipsunit::mspec::testdefinitiongroup#data_labels()","mipsunit::mspec::testdefinitiongroup#descendant_labels()","mipsunit::mspec::dsl#describe()","mipsunit::mspec::testfactory::describe()","mipsunit::mspec::testfactoryhelper::fail_unless()","mipsunit::mspec::generator::generate()","mipsunit::mspec::testfactoryhelper::get_integer_value()","mipsunit::mspec::testfactoryhelper::get_label_string()","mipsunit::mspec::global()","mipsunit::mspec::global#groups()","mipsunit::mspec::testfactoryhelper::is_register?()","mipsunit::mspec::datalabel::is_size_directive?()","mipsunit::mspec::testfactory::it()","mipsunit::mspec::testdefinitiongroup#local_data_labels()","mipsunit::mspec::datalabel#local_name()","mipsunit::mspec::testfactoryhelper::lookup_unique_name()","mipsunit::mspec::datalabel::make_data_string()","mipsunit::mspec::generator::make_group()","mipsunit::mspec::generator::make_test()","mipsunit::mspec::testfactory::metadata()","mipsunit::mspec::assemblylabel::new()","mipsunit::mspec::assemblylabel::new()","mipsunit::mspec::datalabel::new()","mipsunit::mspec::global::new()","mipsunit::mspec::label::new()","mipsunit::mspec::testdefinition::new()","mipsunit::mspec::testdefinitiongroup::new()","mipsunit::mspec::testfactory::new()","mipsunit::mspec::generator::print_labels()","mipsunit::mspec::testfactoryhelper::print_lw()","mipsunit::mspec::global#print_single_warning()","mipsunit::mspec::testfactoryhelper::process_expected_memory_value()","mipsunit::mspec::runner::process_file()","mipsunit::mspec::runner::quit()","mipsunit::mspec::util::util::randomize_preserved()","mipsunit::mspec::testfactoryhelper::register_to_string()","mipsunit::mspec::testfactoryhelper::remove_warning_from_data_method()","mipsunit::mspec::reset()","mipsunit::mspec::runner::run()","mipsunit::mspec::runner::run_and_rescue()","mipsunit::mspec::testfactory#set()","mipsunit::mspec::testfactoryhelper::set_address()","mipsunit::mspec::testfactoryhelper::set_boolean()","mipsunit::mspec::testfactoryhelper::set_integer()","mipsunit::mspec::testfactoryhelper::set_register()","mipsunit::mspec::datalabel::size_of()","mipsunit::mspec::datalabel#to_s()","mipsunit::mspec::datalabel#unique_name()","mipsunit::mspec::runner::usage()","mipsunit::mspec::testfactoryhelper::validate_register()","mipsunit::mspec::testfactory#verify()","mipsunit::mspec::testfactory#verify_memory()","mipsunit::mspec::testfactoryhelper::verify_memory_array()","mipsunit::mspec::testfactoryhelper::verify_memory_memory()","mipsunit::mspec::testfactory#verify_register()",""],"info":[["MIPSUnit","","MIPSUnit.html","",""],["MIPSUnit::MSpec","","MIPSUnit/MSpec.html","","<p>MSpec is an RSpec-inspired unit testing framework for MIPS assembly.  MSpec\ntakes RSpec-like spec files …\n"],["MIPSUnit::MSpec::Assembly","","MIPSUnit/MSpec/Assembly.html","",""],["MIPSUnit::MSpec::AssemblyLabel","","MIPSUnit/MSpec/AssemblyLabel.html","","<p>Represents a label in the <code>.globl</code> section of the code under\ntest. Mistakes when writing specs using such …\n"],["MIPSUnit::MSpec::DSL","","MIPSUnit/MSpec/DSL.html","","<p>This module adds the describe method to the top-level namespace. The most\nstraightforward way to do this …\n"],["MIPSUnit::MSpec::DataLabel","","MIPSUnit/MSpec/DataLabel.html","","<p>Represents a label in an assembly file’s <code>.data</code> section. \nThis class\n<p>generates a Label object with the …\n"],["MIPSUnit::MSpec::Generator","","MIPSUnit/MSpec/Generator.html","","<p>Generates the MIPS assembly code for the provided TestDefinition objects.\n<p>Author &mdash; Zachary Kurmas\n<p>Copyright … &mdash; "],["MIPSUnit::MSpec::Global","","MIPSUnit/MSpec/Global.html","","<p>A container for MSpec global data\n<p>Author &mdash; Zachary Kurmas\n<p>Copyright &mdash; Copyright © 2012\n"],["MIPSUnit::MSpec::InvalidSpecException","","MIPSUnit/MSpec/InvalidSpecException.html","","<p>Raised if there is a non-syntactic problem with a spec file\n<p>Author &mdash; Zachary Kurmas\n<p>Copyright &mdash; Copyright © …\n"],["MIPSUnit::MSpec::Label","","MIPSUnit/MSpec/Label.html","","<p>Author &mdash; Zachary Kurmas\n<p>Copyright &mdash; Copyright © 2012\n\n"],["MIPSUnit::MSpec::Runner","","MIPSUnit/MSpec/Runner.html","","<p>runs mspec:  Parses the command line and executes the desired commands\n<p>Author &mdash; Zachary Kurmas\n<p>Copyright … &mdash; "],["MIPSUnit::MSpec::TestDefinition","","MIPSUnit/MSpec/TestDefinition.html","","<p>TestDefinition objects Bundle\n<p>Code for a test (i.e., its “definition”),\n<p>the description of the …\n"],["MIPSUnit::MSpec::TestDefinitionGroup","","MIPSUnit/MSpec/TestDefinitionGroup.html","","<p>A (potentially nested) group of TestDefinition objects and related\nmeta-data\n<p>Author &mdash; Zachary Kurmas\n<p>Copyright … &mdash; "],["MIPSUnit::MSpec::TestFactory","","MIPSUnit/MSpec/TestFactory.html","","<p>Objects of type TestFactory provide the context in which test definitions\nare run.  First, it provides …\n"],["MIPSUnit::MSpec::TestFactory::AL","","MIPSUnit/MSpec/AssemblyLabel.html","","<p>Represents a label in the <code>.globl</code> section of the code under\ntest. Mistakes when writing specs using such …\n"],["MIPSUnit::MSpec::TestFactoryHelper","","MIPSUnit/MSpec/TestFactoryHelper.html","","<p>These helper methods are used by TestFactory#set, TestFactory#call,\nTestFactory#verify, etc. to generate …\n"],["MIPSUnit::MSpec::Util","","MIPSUnit/MSpec/Util.html","",""],["MIPSUnit::MSpec::Util::Util","","MIPSUnit/MSpec/Util/Util.html","",""],["add_data_label","MIPSUnit::MSpec::TestDefinitionGroup","MIPSUnit/MSpec/TestDefinitionGroup.html#method-i-add_data_label","(label)","<p>Add a new data label, and complain if that label’s name is not unique\n"],["add_group","MIPSUnit::MSpec::Global","MIPSUnit/MSpec/Global.html#method-i-add_group","(group)","<p>Append <code>group</code> to the list of test groups.\n<p>(The <code>define</code> method in the global namespace uses this method to\n…\n"],["all_labels","MIPSUnit::MSpec::DataLabel","MIPSUnit/MSpec/DataLabel.html#method-c-all_labels","()","<p>returns a list of all DataLabel objects that have been created\n"],["ancestor_labels","MIPSUnit::MSpec::TestDefinitionGroup","MIPSUnit/MSpec/TestDefinitionGroup.html#method-i-ancestor_labels","()","<p>return an immutable array containing the labels defined for all ancestors\n"],["assert_label_not_defined_in_group_scope","MIPSUnit::MSpec::TestDefinitionGroup","MIPSUnit/MSpec/TestDefinitionGroup.html#method-i-assert_label_not_defined_in_group_scope","(label)","<p>Raises InvalidSpecException if a label with the same name has already been\ndefined in the scope of this …\n"],["assert_label_not_defined_in_object_scope","MIPSUnit::MSpec::TestDefinitionGroup","MIPSUnit/MSpec/TestDefinitionGroup.html#method-i-assert_label_not_defined_in_object_scope","(label)","<p>Raises InvalidSpecException if a label with the same name has already been\ndefined in the scope of a …\n"],["assert_register_not_at","MIPSUnit::MSpec::TestFactory","MIPSUnit/MSpec/TestFactory.html#method-i-assert_register_not_at","(register)","<p>The generated assembly code uses :at as a temporary.  Thus, it is not\npossible to directly verify the …\n"],["before","MIPSUnit::MSpec::TestFactory","MIPSUnit/MSpec/TestFactory.html#method-c-before","(&block)","<p>provide code to be run before each test.\n"],["call","MIPSUnit::MSpec::TestFactory","MIPSUnit/MSpec/TestFactory.html#method-i-call","(p1=nil, p2=nil, p3=nil, p4=nil)","<p>Generates assembly instructions to call the method identified by the\ndescribe block with the given values. …\n"],["call_by_name","MIPSUnit::MSpec::TestFactory","MIPSUnit/MSpec/TestFactory.html#method-i-call_by_name","(name, p1=nil, p2=nil, p3=nil, p4=nil)","<p>Generates assembly instructions to call the specified function with the\ngiven values.\n"],["cumulative_before","MIPSUnit::MSpec::TestDefinitionGroup","MIPSUnit/MSpec/TestDefinitionGroup.html#method-i-cumulative_before","()","<p>Get all the before blocks for this group and its ancestors\n"],["cumulative_description","MIPSUnit::MSpec::TestDefinitionGroup","MIPSUnit/MSpec/TestDefinitionGroup.html#method-i-cumulative_description","()","<p>Concatenate this group’s description and the descriptions of all of its\nancestors\n"],["data","MIPSUnit::MSpec::TestFactory","MIPSUnit/MSpec/TestFactory.html#method-c-data","(hash)","<p>Define a new data label whose scope is the entire <code>describe</code>\nblock\n"],["data","MIPSUnit::MSpec::TestFactory","MIPSUnit/MSpec/TestFactory.html#method-i-data","(hash)","<p>define a new data label whose scope is limited to the current\n<code>it</code> block. This method should not be called …\n"],["data","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-data","(hash)","<p>creates a new DataLabel.  The <code>yield</code> adds the new label to\neither the specific TestFactory, or the entire …\n"],["data!","MIPSUnit::MSpec::TestFactory","MIPSUnit/MSpec/TestFactory.html#method-i-data-21","(hash)","<p>define a new data label whose scope is limited to the current\n<code>it</code> block.  Calling this method from a  …\n"],["data_item_to_string","MIPSUnit::MSpec::DataLabel","MIPSUnit/MSpec/DataLabel.html#method-c-data_item_to_string","(datum, name=nil)","<p>converts the given datum for a data label to the corresponding\n<code>String</code>.\n<p>Integer and Float are unchanged …\n"],["data_labels","MIPSUnit::MSpec::TestDefinitionGroup","MIPSUnit/MSpec/TestDefinitionGroup.html#method-i-data_labels","()","<p>returns an immutable array of all data labels “in scope”\n"],["descendant_labels","MIPSUnit::MSpec::TestDefinitionGroup","MIPSUnit/MSpec/TestDefinitionGroup.html#method-i-descendant_labels","()","<p>return an immutable array containing the labels defined for this object and\nall descendants\n"],["describe","MIPSUnit::MSpec::DSL","MIPSUnit/MSpec/DSL.html#method-i-describe","(name, &block)",""],["describe","MIPSUnit::MSpec::TestFactory","MIPSUnit/MSpec/TestFactory.html#method-c-describe","(description, &block)","<p>Processes a <code>describe</code> block in a spec\n"],["fail_unless","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-fail_unless","(condition, test_name, location_name, expected_value, factory, output)","\n<pre>generate assembly code that will test a specified condition, then print a failure message unless the ...</pre>\n"],["generate","MIPSUnit::MSpec::Generator","MIPSUnit/MSpec/Generator.html#method-c-generate","(groups, output)","<p>Generate the MIPS test assembly code\n"],["get_integer_value","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-get_integer_value","(value)","<p>returns <code>value</code> if <code>value</code> is an\n<code>Integer</code>.  Returns the corresponding <code>ASCII</code> value\nif <code>value</code> is a <code>String</code> of …\n"],["get_label_string","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-get_label_string","(label, labels_in_scope)","<p>return the globally unique <code>String</code> that corresponds to the\ngiven label. If <code>label</code> is a <code>String</code>, then assume\n…\n"],["global","MIPSUnit::MSpec","MIPSUnit/MSpec.html#method-c-global","()","<p>return the singleton Global object.  Create a new Global object if\nnecessary.\n"],["groups","MIPSUnit::MSpec::Global","MIPSUnit/MSpec/Global.html#method-i-groups","()","<p>get test groups\n"],["is_register?","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-is_register-3F","(symbol)","<p>return whether <code>symbol</code> is a valid register\n"],["is_size_directive?","MIPSUnit::MSpec::DataLabel","MIPSUnit/MSpec/DataLabel.html#method-c-is_size_directive-3F","(directive)","<p>returns <code>true</code> if <code>directive</code> specifies a data size\n(<code>:word</code>, <code>:byte</code>, etc.)\n"],["it","MIPSUnit::MSpec::TestFactory","MIPSUnit/MSpec/TestFactory.html#method-c-it","(description, &block)","<p>Generates a TestDefinition object then adds it to the list of test\ndefinitions for the current TestDefinitionGroup …\n"],["local_data_labels","MIPSUnit::MSpec::TestDefinitionGroup","MIPSUnit/MSpec/TestDefinitionGroup.html#method-i-local_data_labels","()","<p>return an immutable array containing this object’s data labels\n"],["local_name","MIPSUnit::MSpec::DataLabel","MIPSUnit/MSpec/DataLabel.html#method-i-local_name","()","<p>return the local name of this label\n"],["lookup_unique_name","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-lookup_unique_name","(label, labels_in_scope)","<p>return the unique name for the given label (i.e., local name). Raises an\nInvalidSpecException if <code>label</code> …\n"],["make_data_string","MIPSUnit::MSpec::DataLabel","MIPSUnit/MSpec/DataLabel.html#method-c-make_data_string","(name, *data)","<p>Convert the array of values into a <code>String</code> to be placed in an\nassembly file’s <code>.data</code> section.  The <code>name</code> …\n"],["make_group","MIPSUnit::MSpec::Generator","MIPSUnit/MSpec/Generator.html#method-c-make_group","(group, output)","<p>Generate the MIPS test assembly for all the test definitions in the given\nTestDefinitionGroup (effectively …\n"],["make_test","MIPSUnit::MSpec::Generator","MIPSUnit/MSpec/Generator.html#method-c-make_test","(definition, group, output)","<p>Generate the MIPS test assembly code for the given TestDefinition (which\nmust be in the given TestDefinitionGroup …\n"],["metadata","MIPSUnit::MSpec::TestFactory","MIPSUnit/MSpec/TestFactory.html#method-c-metadata","()","<p>return the metadata for the particular TestFactory subclass\n"],["new","MIPSUnit::MSpec::AssemblyLabel","MIPSUnit/MSpec/AssemblyLabel.html#method-c-new","(data)",""],["new","MIPSUnit::MSpec::AssemblyLabel","MIPSUnit/MSpec/AssemblyLabel.html#method-c-new","(data)",""],["new","MIPSUnit::MSpec::DataLabel","MIPSUnit/MSpec/DataLabel.html#method-c-new","(local_name, *data)","<p>generate a new DataLabel with the given local name and array of\nvalues/directives\n"],["new","MIPSUnit::MSpec::Global","MIPSUnit/MSpec/Global.html#method-c-new","()",""],["new","MIPSUnit::MSpec::Label","MIPSUnit/MSpec/Label.html#method-c-new","(name=DEFAULT_LABEL_NAME)","<p>Creates a new Label with the given local name and a globally unique name\nbased on the local name.  The …\n"],["new","MIPSUnit::MSpec::TestDefinition","MIPSUnit/MSpec/TestDefinition.html#method-c-new","(test_factory_class, description, block)",""],["new","MIPSUnit::MSpec::TestDefinitionGroup","MIPSUnit/MSpec/TestDefinitionGroup.html#method-c-new","(description, parent)",""],["new","MIPSUnit::MSpec::TestFactory","MIPSUnit/MSpec/TestFactory.html#method-c-new","(output, description)",""],["print_labels","MIPSUnit::MSpec::Generator","MIPSUnit/MSpec/Generator.html#method-c-print_labels","(output)","<p>print the assembly for all data labels.\n"],["print_lw","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-print_lw","(output, target, base, offset, size)","<p>generates an assembly <code>lw</code> (load word) instruction. This method\ngenerates the appropriate <code>lw</code> pseudo-instruction …\n"],["print_single_warning","MIPSUnit::MSpec::Global","MIPSUnit/MSpec/Global.html#method-i-print_single_warning","(warning)","<p>print a warning just one time per process\n"],["process_expected_memory_value","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-process_expected_memory_value","(value, base, current_offset, current_increment, factory, test_name, output)","<p>This is a helper method for verify_memory_array that processes a single\nelement of an array containing …\n"],["process_file","MIPSUnit::MSpec::Runner","MIPSUnit/MSpec/Runner.html#method-c-process_file","(file_name)",""],["quit","MIPSUnit::MSpec::Runner","MIPSUnit/MSpec/Runner.html#method-c-quit","(message, value)",""],["randomize_preserved","MIPSUnit::MSpec::Util::Util","MIPSUnit/MSpec/Util/Util.html#method-c-randomize_preserved","()","<p>return a Hash containing a random value to each of the preserved registers,\nexcept $ra\n<p>Author &mdash; Zachary …\n"],["register_to_string","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-register_to_string","(register)",""],["remove_warning_from_data_method","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-remove_warning_from_data_method","(factory)","<p>replaces the initial implementation of TestFactory#data with one that does\nnot print a warning.\n"],["reset","MIPSUnit::MSpec","MIPSUnit/MSpec.html#method-c-reset","()",""],["run","MIPSUnit::MSpec::Runner","MIPSUnit/MSpec/Runner.html#method-c-run","(args)",""],["run_and_rescue","MIPSUnit::MSpec::Runner","MIPSUnit/MSpec/Runner.html#method-c-run_and_rescue","()",""],["set","MIPSUnit::MSpec::TestFactory","MIPSUnit/MSpec/TestFactory.html#method-i-set","(hash)","<p>Generates assembly instructions to set registers to the given values.\nValues may be integers (<code>Integer</code> …\n"],["set_address","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-set_address","(register, label, output, data_labels)","<p>produce a line of assembly to set <code>register</code> to the unique label\ncorresponding to <code>label</code> This method will …\n"],["set_boolean","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-set_boolean","(register, value, output)","<p>produce a line of assembly to set <code>register</code> to\n<code>value</code>.  This method will raise an InvalidSpecException …\n"],["set_integer","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-set_integer","(register, value, output)","<p>produce a line of assembly to set <code>register</code> to\n<code>value</code>.  This method will raise an InvalidSpecException …\n"],["set_register","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-set_register","(register, value, output, data_labels)","<p>Write an assembly statement to <code>output</code> setting\n<code>register</code> to <code>value</code>. This method raises an\nInvalidSpecException …\n"],["size_of","MIPSUnit::MSpec::DataLabel","MIPSUnit/MSpec/DataLabel.html#method-c-size_of","(directive)","<p>returns the size (in bytes) corresponding to the given directive\n<p>raises InvalidSpecException if the directive …\n"],["to_s","MIPSUnit::MSpec::DataLabel","MIPSUnit/MSpec/DataLabel.html#method-i-to_s","()","<p>return the line of assembly text for this label\n"],["unique_name","MIPSUnit::MSpec::DataLabel","MIPSUnit/MSpec/DataLabel.html#method-i-unique_name","()","<p>return the unique name of this label\n"],["usage","MIPSUnit::MSpec::Runner","MIPSUnit/MSpec/Runner.html#method-c-usage","()",""],["validate_register","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-validate_register","(register)","<p>raises an InvalidSpecException if <code>register</code> is not a valid\nregister\n"],["verify","MIPSUnit::MSpec::TestFactory","MIPSUnit/MSpec/TestFactory.html#method-i-verify","(hash)","<p>verifies the given output state TODO: call verify_memory when the meaning\nis unambiguous\n"],["verify_memory","MIPSUnit::MSpec::TestFactory","MIPSUnit/MSpec/TestFactory.html#method-i-verify_memory","(observed, expected, length = nil)","<p>verify that the given memory location contains the specified value\n"],["verify_memory_array","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-verify_memory_array","(base, values, factory, test_name, labels_in_scope, output)","<p>Verify that the memory beginning at the given label/register matches the\nsequence of values given\n"],["verify_memory_memory","MIPSUnit::MSpec::TestFactoryHelper","MIPSUnit/MSpec/TestFactoryHelper.html#method-c-verify_memory_memory","(expected_base, observed_base, factory, labels_in_scope, output)","<p>Verify that the memory beginning at expected_base matches the memory at\nobserved_base\n"],["verify_register","MIPSUnit::MSpec::TestFactory","MIPSUnit/MSpec/TestFactory.html#method-i-verify_register","(register, expected_value)","<p>Generates assembly code to verify that the specified register has the\nexpected value.\n"],["License","","License_txt.html","","<p>LICENSE AGREEMENT\n<p>IMPORTANT NOTICE: YOUR USE OF THE SOFTWARE IS CONDITIONED ON YOUR REVIEW\nAND AGREEMENT …\n"]]}}