version=pmwiki-2.1.27 ordered=1 urlencoded=1
agent=Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10.4; en-US; rv:1.9.1.7) Gecko/20091221 Firefox/3.5.7
author=
csum=
ctime=1262973637
host=68.188.218.51
name=WorkPublic.ImprovingCS162SuccessRate
rev=6
targets=
text=Whenever success rates in 162 and 163 come up, we faculty come up with%0aa long list of possible causes for the low success rate, but never get%0amuch further in the discussion. Let's try this:%0a# Brainstorm a list of possible causes for the low success rate (which I have begun)%0a# select those causes that we believe have the largest affect on success rate%0a# decide which causes we can and should address, and %0a# address them.%0a%0aI wrote down many of the ideas that came up yesterday.  Please add to the list below:  (For now, please just add to the list.  We'll debate the merits of the items on the list later.)%0a%0a* The students don't realize how much work 162 is, and then don't believe us when we tell them.  Later, they get overwhelmed and quit.%0a** Many students mistakenly believe that 100-level courses are either easy, or of an "high-level"/overview nature. %0a** Too few courses across the university require 3 hours of work for every credit hour (the ratio I was taught in high school). Therefore, they don't believe me when I tell them that this 4 credit hour course will take at least 12 hours of work outside class.%0a** Too many professors tell their students tell their students that the class will be more difficult and/or time consuming than it is.  As a result, the students don't believe me when I tell them 162 will take some students up to 20 hours/week.%0a** Many students refuse to believe that a 16 credit-hour load is not compatible with working 20+ hours a week.%0a* 162 has a "brick wall": It is easy for the first few weeks, then suddenly gets hard when we get to conditionals and loops.  By the time the course hits this "wall" some students have allocated their study time to other things (e.g., work).  (In my opinion, this "brick wall" is a consequence of not being able to do much interesting/difficult stuff in 162 until we get through conditionals into loops.)%0a* The students decide in the middle of the course that learning to program in Java isn't worth 16+ hours/week of work.%0a** The course doesn't meet the needs of many non-computing majors. OO programming in Java may not be the most useful paradigm for mathematicians, physicists, statisticians, etc. to learn.  Therefore, when the course gets difficult and time consuming, these students don't put in the necessary work because they don't see the benefits.%0a** Students drift through majors until they find something they can succeed in without working hard.%0a** Students think they want to go into "computers", but find out after a few weeks that they don't like programming.%0a* Teaching CS 162 well is very difficult.  I think that teaching programming requires a different level of teaching ability than most college courses. Our unwritten policy is that "anybody with a Ph.D. in Computer Science who is hired at GVSU can learn a CS subject well enough to teach it."  I don't believe this assumption is vaild for the teaching of programming. For example, I have always found programming so easy and intuitive that I have trouble figuring out what the students find difficult. As a result, I have trouble breaking my examples and thought processes down to a level where the C and D students can digest them.  I think it takes an extraordinary teacher to figure out how to break subjects down to a simpler level than the level at which he himself learned the material.  Are we consistently staffing CS 162 with such extraordinary teachers?%0a* The course is too difficult: It requires the typical student to learn too much too quickly.%0a%0a-----%0aI am not convinced the course is too hard.  Projects can be made more interesting and relevant to maintain student motivation.  Group activities can help to foster a more supportive environment.  Classroom lectures and activities can be more exciting.%0a%0aI also not convinced it's too hard; however, I wanted a complete list of *possible* causes for the low success rate.
time=1263161042
author:1263161042=
diff:1263161042:1262991433:=24,27c24%0a%3c -----%0a%3c I am not convinced the course is too hard.  Projects can be made more interesting and relevant to maintain student motivation.  Group activities can help to foster a more supportive environment.  Classroom lectures and activities can be more exciting.%0a%3c %0a%3c I also not convinced it's too hard; however, I wanted a complete list of *possible* causes for the low success rate.%0a\ No newline at end of file%0a---%0a> I am not convinced the course is too hard.  Projects can be made more interesting and relevant to maintain student motivation.  Group activities can help to foster a more supportive environment.  Classroom lectures and activities can be more exciting.%0a\ No newline at end of file%0a
host:1263161042=68.188.218.51
author:1262991433=Grissom
diff:1262991433:1262973858:=22,24c22%0a%3c * The course is too difficult: It requires the typical student to learn too much too quickly.%0a%3c %0a%3c I am not convinced the course is too hard.  Projects can be made more interesting and relevant to maintain student motivation.  Group activities can help to foster a more supportive environment.  Classroom lectures and activities can be more exciting.  %0a\ No newline at end of file%0a---%0a> * The course is too difficult: It requires the typical student to learn too much too quickly.%0a\ No newline at end of file%0a
host:1262991433=69.208.85.199
author:1262973858=
diff:1262973858:1262973834:=17c17%0a%3c * The students decide in the middle of the course that learning to program in Java isn't worth 16+ hours/week of work.%0a---%0a> ** The students decide in the middle of the course that learning to program in Java isn't worth 16+ hours/week of work.%0a
host:1262973858=148.61.39.220
author:1262973834=
diff:1262973834:1262973764:=14c14%0a%3c ** Too many professors tell their students tell their students that the class will be more difficult and/or time consuming than it is.  As a result, the students don't believe me when I tell them 162 will take some students up to 20 hours/week.%0a---%0a>  ** Too many professors tell their students tell their students that the class will be more difficult and/or time consuming than it is.  As a result, the students don't believe me when I tell them 162 will take some students up to 20 hours/week.%0a
host:1262973834=148.61.39.220
author:1262973764=
diff:1262973764:1262973637:=13,22c13,57%0a%3c ** Too few courses across the university require 3 hours of work for every credit hour (the ratio I was taught in high school). Therefore, they don't believe me when I tell them that this 4 credit hour course will take at least 12 hours of work outside class.%0a%3c  ** Too many professors tell their students tell their students that the class will be more difficult and/or time consuming than it is.  As a result, the students don't believe me when I tell them 162 will take some students up to 20 hours/week.%0a%3c ** Many students refuse to believe that a 16 credit-hour load is not compatible with working 20+ hours a week.%0a%3c * 162 has a "brick wall": It is easy for the first few weeks, then suddenly gets hard when we get to conditionals and loops.  By the time the course hits this "wall" some students have allocated their study time to other things (e.g., work).  (In my opinion, this "brick wall" is a consequence of not being able to do much interesting/difficult stuff in 162 until we get through conditionals into loops.)%0a%3c ** The students decide in the middle of the course that learning to program in Java isn't worth 16+ hours/week of work.%0a%3c ** The course doesn't meet the needs of many non-computing majors. OO programming in Java may not be the most useful paradigm for mathematicians, physicists, statisticians, etc. to learn.  Therefore, when the course gets difficult and time consuming, these students don't put in the necessary work because they don't see the benefits.%0a%3c ** Students drift through majors until they find something they can succeed in without working hard.%0a%3c ** Students think they want to go into "computers", but find out after a few weeks that they don't like programming.%0a%3c * Teaching CS 162 well is very difficult.  I think that teaching programming requires a different level of teaching ability than most college courses. Our unwritten policy is that "anybody with a Ph.D. in Computer Science who is hired at GVSU can learn a CS subject well enough to teach it."  I don't believe this assumption is vaild for the teaching of programming. For example, I have always found programming so easy and intuitive that I have trouble figuring out what the students find difficult. As a result, I have trouble breaking my examples and thought processes down to a level where the C and D students can digest them.  I think it takes an extraordinary teacher to figure out how to break subjects down to a simpler level than the level at which he himself learned the material.  Are we consistently staffing CS 162 with such extraordinary teachers?%0a%3c * The course is too difficult: It requires the typical student to learn too much too quickly.%0a\ No newline at end of file%0a---%0a> ** Too few courses across the university require 3 hours of work for%0a>     every credit hour (the ratio I was taught in high school).%0a>     Therefore, they don't believe me when I tell them that this 4%0a>     credit hour course will take at least 12 hours of work outside%0a>     class.%0a>  ** Too many professors tell their students tell their students that%0a>     the class will be more difficult and/or time consuming than it is.%0a>     As a result, the students don't believe me when I tell them 162%0a>     will take some students up to 20 hours/week.%0a> ** Many students refuse to believe that a 16 credit-hour load is not%0a>     compatible with working 20+ hours a week.%0a> * 162 has a "brick wall": It is easy for the first few weeks,%0a>   then suddenly gets hard when we get to conditionals and loops.  By%0a>   the time the course hits this "wall" some students have allocated%0a>   their study time to other things (e.g., work).  (In my opinion, this%0a>   "brick wall" is a consequence of not being able to do much%0a>   interesting/difficult stuff in 162 until we get through conditionals%0a>   into loops.)%0a> ** The students decide in the middle of the course that learning to%0a>   program in Java isn't worth 16+ hours/week of work.%0a> ** The course doesn't meet the needs of many non-computing majors. OO%0a>     programming in Java may not be the most useful paradigm for%0a>     mathematicians, physicists, statisticians, etc. to learn.  Therefore,%0a>     when the course gets difficult and time consuming, these students%0a>     don't put in the necessary work because they don't see the%0a>     benefits.%0a> ** Students drift through majors until they find something they can%0a>     succeed in without working hard.%0a> ** Students think they want to go into "computers", but find out%0a>     after a few weeks that they don't like programming.%0a> * Teaching CS 162 well is very difficult.  I think that teaching%0a>   programming requires a different level of teaching ability than most%0a>   college courses. Our unwritten policy is that "anybody with a Ph.D. in%0a>   Computer Science who is hired at GVSU can learn a CS subject well%0a>   enough to teach it."  I don't believe this assumption is vaild for the teaching of%0a>   programming. For example, I have always found programming so easy%0a>   and intuitive that I have trouble figuring out what the students%0a>   find difficult. As a result, I have trouble breaking my examples and%0a>   thought processes down to a level where the C and D students can%0a>   digest them.  I think it takes an extraordinary teacher to figure out%0a>   how to break subjects down to a simpler level than the level at%0a>   which he himself learned the material.  Are we consistently staffing%0a>   CS 162 with such extraordinary teachers?%0a> * The course is too difficult: It requires the typical student to%0a>   learn too much too quickly.%0a\ No newline at end of file%0a
host:1262973764=148.61.39.220
author:1262973637=
diff:1262973637:1262973637:=1,57d0%0a%3c Whenever success rates in 162 and 163 come up, we faculty come up with%0a%3c a long list of possible causes for the low success rate, but never get%0a%3c much further in the discussion. Let's try this:%0a%3c # Brainstorm a list of possible causes for the low success rate (which I have begun)%0a%3c # select those causes that we believe have the largest affect on success rate%0a%3c # decide which causes we can and should address, and %0a%3c # address them.%0a%3c %0a%3c I wrote down many of the ideas that came up yesterday.  Please add to the list below:  (For now, please just add to the list.  We'll debate the merits of the items on the list later.)%0a%3c %0a%3c * The students don't realize how much work 162 is, and then don't believe us when we tell them.  Later, they get overwhelmed and quit.%0a%3c ** Many students mistakenly believe that 100-level courses are either easy, or of an "high-level"/overview nature. %0a%3c ** Too few courses across the university require 3 hours of work for%0a%3c     every credit hour (the ratio I was taught in high school).%0a%3c     Therefore, they don't believe me when I tell them that this 4%0a%3c     credit hour course will take at least 12 hours of work outside%0a%3c     class.%0a%3c  ** Too many professors tell their students tell their students that%0a%3c     the class will be more difficult and/or time consuming than it is.%0a%3c     As a result, the students don't believe me when I tell them 162%0a%3c     will take some students up to 20 hours/week.%0a%3c ** Many students refuse to believe that a 16 credit-hour load is not%0a%3c     compatible with working 20+ hours a week.%0a%3c * 162 has a "brick wall": It is easy for the first few weeks,%0a%3c   then suddenly gets hard when we get to conditionals and loops.  By%0a%3c   the time the course hits this "wall" some students have allocated%0a%3c   their study time to other things (e.g., work).  (In my opinion, this%0a%3c   "brick wall" is a consequence of not being able to do much%0a%3c   interesting/difficult stuff in 162 until we get through conditionals%0a%3c   into loops.)%0a%3c ** The students decide in the middle of the course that learning to%0a%3c   program in Java isn't worth 16+ hours/week of work.%0a%3c ** The course doesn't meet the needs of many non-computing majors. OO%0a%3c     programming in Java may not be the most useful paradigm for%0a%3c     mathematicians, physicists, statisticians, etc. to learn.  Therefore,%0a%3c     when the course gets difficult and time consuming, these students%0a%3c     don't put in the necessary work because they don't see the%0a%3c     benefits.%0a%3c ** Students drift through majors until they find something they can%0a%3c     succeed in without working hard.%0a%3c ** Students think they want to go into "computers", but find out%0a%3c     after a few weeks that they don't like programming.%0a%3c * Teaching CS 162 well is very difficult.  I think that teaching%0a%3c   programming requires a different level of teaching ability than most%0a%3c   college courses. Our unwritten policy is that "anybody with a Ph.D. in%0a%3c   Computer Science who is hired at GVSU can learn a CS subject well%0a%3c   enough to teach it."  I don't believe this assumption is vaild for the teaching of%0a%3c   programming. For example, I have always found programming so easy%0a%3c   and intuitive that I have trouble figuring out what the students%0a%3c   find difficult. As a result, I have trouble breaking my examples and%0a%3c   thought processes down to a level where the C and D students can%0a%3c   digest them.  I think it takes an extraordinary teacher to figure out%0a%3c   how to break subjects down to a simpler level than the level at%0a%3c   which he himself learned the material.  Are we consistently staffing%0a%3c   CS 162 with such extraordinary teachers?%0a%3c * The course is too difficult: It requires the typical student to%0a%3c   learn too much too quickly.%0a\ No newline at end of file%0a
host:1262973637=148.61.39.220
